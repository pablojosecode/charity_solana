import { Connection, PublicKey } from '@solana/web3.js';
import { RouteInfo } from './routes';
import { Instruction } from '../utils/instruction';
import { Owner } from '../utils/Owner';
import { PlatformFee } from './types';
import { QuoteMintToReferrer } from '..';
import { MarketInfo } from './market';
declare type RouteToInstructionsParams = {
    user: Owner;
    openOrdersAddresses: (PublicKey | undefined)[];
    userSourceTokenAccountAddress: PublicKey;
    userIntermediateTokenAccountAddresses: PublicKey[];
    userDestinationTokenAccountAddress: PublicKey;
    routeInfo: RouteInfo;
    platformFee: PlatformFee | undefined;
    quoteMintToReferrer: QuoteMintToReferrer;
};
declare function routeToInstructions({ user, openOrdersAddresses, userSourceTokenAccountAddress, userIntermediateTokenAccountAddresses, userDestinationTokenAccountAddress, routeInfo, platformFee, quoteMintToReferrer, }: RouteToInstructionsParams): Promise<Instruction>;
export declare function routeAtaInstructions({ connection, marketInfos, owner, unwrapSOL, }: {
    connection: Connection;
    marketInfos: MarketInfo[];
    owner: Owner;
    unwrapSOL: boolean;
}): Promise<{
    userIntermediaryTokenAccountResults: (Instruction & {
        address: PublicKey;
    })[];
    userDestinationTokenAccountResult: Instruction & {
        address: PublicKey;
    };
}>;
export default routeToInstructions;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.activeSmartFarmingRaydiumPools = exports.raydiumSmartFarmingPools = void 0;
const web3_js_1 = require("@solana/web3.js");
const lodash_1 = require("lodash");
const info_1 = require("../../farm/raydium/info");
const tokens_1 = require("../../tokens");
const base_1 = require("../base");
exports.raydiumSmartFarmingPools = {
    "SOL-USDC": {
        alias: 'SOL-USDC[Raydium]',
        smartPoolInfo: {
            poolType: base_1.POOL_VAULT_TYPE_RAYDIUM_V2,
            tokenMint0: tokens_1.TOKENS.USDC.mintAddress,
            tokenMint1: tokens_1.TOKENS.SOL.mintAddress,
            liquidityTokenMint: new web3_js_1.PublicKey("8HoQnePLqPj4M7PUDzfw8e3Ymdwgc7NLGnaTUapubyvu"),
            rewardsTokenMint: tokens_1.TOKENS.FRC.mintAddress,
            basedRewardsTokenMint: tokens_1.TOKENS.RAY.mintAddress,
            basedRewardsTokenMintB: tokens_1.TOKENS.SRM.mintAddress,
            poolInfoAccount: new web3_js_1.PublicKey('3hp7LEnNAQRVxU7179fTWa1groP5gUYY55DSv4aALunP'),
            poolAuthority: new web3_js_1.PublicKey('7F2vCe88M5PQRtjuDX7ygh5KQnc5UXk5ZyftvoHLXc4U'),
            vaultManagerAccount: new web3_js_1.PublicKey('F9WXpyBWe1nhswWQDgHckpTcNcqQFQh6NykBK1EKfJ4t'),
            farmInfoAccount: new web3_js_1.PublicKey('J4GZcywrSJ7fz7WsUXRTUUzifgzLpvcoAcBrDWqvyjJD'),
            tokenAccount0: new web3_js_1.PublicKey('6ENGdiabZVrYyj3FNoSP8XUcC27AbwgeLgJZYNTe3FEk'),
            tokenAccount1: new web3_js_1.PublicKey('DRJ8UMEAXNNMU844xKD1yZyMbvmrzzTFCswn3mdD6ryi'),
            liquidityTokenAccount: new web3_js_1.PublicKey('6v2qnfTrsWuTYF2JwNCPaUJAopvPYgVZ2Mxasd9HLr6p'),
            basedRewardsTokenAccount: new web3_js_1.PublicKey('6o15yBaWMz8xRMwVt2NWPbMbXxxUgHAiQfiUqPHgo8Je'),
            basedRewardsTokenAccountB: new web3_js_1.PublicKey('GyAL39PVLsQ8ma9aKkHabaWx5WetQmfW6DVk9mctJZ1M'),
            borrowCreditTokenAccount0: new web3_js_1.PublicKey('91npk33ZPfDczCgS4BuFsEvZ2G9kLTxdjym5RTfXhhYw'),
            borrowCreditTokenAccount1: new web3_js_1.PublicKey('GZ7qiEb5aWziqfxE7VgGqK8QWh4HFHAUasjpsxsP8VDc'),
            rewardsTokenAccount: new web3_js_1.PublicKey('81Py4N1sPnPbNaqdXFxGNiAJ3Dwv5SgYPdSxb6zXGLHS'),
            rewardsTargetTokenAccount: new web3_js_1.PublicKey('6ENGdiabZVrYyj3FNoSP8XUcC27AbwgeLgJZYNTe3FEk'),
            rewardsTargetTokenAccountB: new web3_js_1.PublicKey('6ENGdiabZVrYyj3FNoSP8XUcC27AbwgeLgJZYNTe3FEk'),
        },
        basedLendingInfo: {
            "0": {
                tknMint: tokens_1.TOKENS.USDC.mintAddress,
                lendingPoolInfoAccount: new web3_js_1.PublicKey("Hx6LbkMHe69DYawhPyVNs8Apa6tyfogfzQV6a7XkwBUU"),
                lendingPoolTknAccount: new web3_js_1.PublicKey("CFp9kt8z3Epb1QSiEp3xA44KbSwuJxhFR3wQoerFqYS9"),
                lendingPoolFeeAccount: new web3_js_1.PublicKey("6h6vVc42moDmRs7KahQpFs8YWL5GfWBrxT9UrsUvpApn"),
                lendingPoolShareMint: new web3_js_1.PublicKey("62fDf5daUJ9jBz8Xtj6Bmw1bh1DvHn8AG4L9hMmxCzpu"),
                lendingPoolShareAccount: new web3_js_1.PublicKey("Gyc1V1xbA9NjzuURE662ATw6W4AdhwvsL26yUnSGhbkz"),
                lendingPoolCreditMint: new web3_js_1.PublicKey("CZ2s85dnuAVyGbRWBNauHZwj9oTV2i9xTvFwc1Cedr7E"),
                lendingPoolCreditAccount: new web3_js_1.PublicKey("Bd71jEvypKFs8N5gByyhD2149tSqLy4PVAzFFShCTJTB"),
            },
            "1": {
                tknMint: tokens_1.TOKENS.SOL.mintAddress,
                lendingPoolInfoAccount: new web3_js_1.PublicKey("EnZC8MB6QLTxwN1LNqCXYC7XMpvXqitnYQPf5y5AcQRn"),
                lendingMarketAuthority: new web3_js_1.PublicKey("sCDiYj7X7JmXg5fVq2nqED2q1Wqjo7PnqMgH3casMem"),
                lendingPoolTknAccount: new web3_js_1.PublicKey("GiJwrxQW5NQWWAva4rnDMXwHxfrhyUzwMX5to1pmCCgF"),
                lendingPoolFeeAccount: new web3_js_1.PublicKey("wLq5xWzkgfH1T2bbByBoUFxKk5g4K2urQv8q71gCsbM"),
                lendingPoolShareMint: new web3_js_1.PublicKey("92Zst3rEoJsyZUW2yNc2811GtkBwFrm3tqgxMTtFWuSB"),
                lendingPoolShareAccount: new web3_js_1.PublicKey("Hyi1jMgc9MMEZyaG9ziL2PvT7zbeRNKhb5K1kj9bxz4x"),
                lendingPoolCreditMint: new web3_js_1.PublicKey("7x61NrCzeekHwgW5Nk4afMg2sxjMK6RyMkx8tCzzX4qG"),
                lendingPoolCreditAccount: new web3_js_1.PublicKey("WuPCgCuyLSXatdjyWqkGjCPSQFgKLwcfsNR9fDq3hVL"),
            }
        },
        basedFarmInfo: {
            ammInfo: {
                raydiumProgramId: info_1.LIQUIDITY_POOL_PROGRAM_ID_V4,
                ammId: new web3_js_1.PublicKey("58oQChx4yWmvKdwLLZzBi4ChoCc2fqCUWBkwMihLYQo2"),
                ammAuthority: new web3_js_1.PublicKey("5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1"),
                ammOpenOrders: new web3_js_1.PublicKey("HRk9CMrpq7Jn9sh7mzxE8CChHG8dneX9p475QKz4Fsfc"),
                ammTargetOrders: new web3_js_1.PublicKey("CZza3Ej4Mc58MnxWA385itCC9jCo3L1D7zc3LKy1bZMR"),
                lpDecimals: 9,
                ammCoinAccount: new web3_js_1.PublicKey("DQyrAcCrDXQ7NeoqGgDCZwBvWDcYmFCjSb9JtteuvPpz"),
                ammPcAccount: new web3_js_1.PublicKey("HLmqeL62xR1QoZ1HKKbXRrdN1p3phKpxRMb2VVopvBBz"),
                poolWithdrawQueue: new web3_js_1.PublicKey("G7xeGGLevkRwB5f44QNgQtrPKBdMfkT6ZZwpS9xcC97n"),
                poolTempLpTokenAccount: new web3_js_1.PublicKey("Awpt6N7ZYPBa4vG4BQNFhFxDj4sxExAA9rpBAoBw2uok"),
                serumProgramId: info_1.SERUM_PROGRAM_ID_V3,
                serumMarketId: new web3_js_1.PublicKey("9wFFyRfZBsuAha4YcuxcXLKwMxJR43S7fPfQLusDBzvT"),
                serumBids: new web3_js_1.PublicKey("14ivtgssEBoBjuZJtSAPKYgpUK7DmnSwuPMqJoVTSgKJ"),
                serumAsks: new web3_js_1.PublicKey("CEQdAFKdycHugujQg9k2wbmxjcpdYZyVLfV9WerTnafJ"),
                serumEventQueue: new web3_js_1.PublicKey("5KKsLVU6TcbVDK4BS6K1DGDxnh4Q9xjYJ8XaDCG5t8ht"),
                serumCoinVault: new web3_js_1.PublicKey("36c6YqAwyGKQG66XEp2dJc5JqjaBNv7sVghEtJv4c7u6"),
                serumPCVault: new web3_js_1.PublicKey("8CFo8bL8mZQK8abbFyypFMwEDd8tVJjHTTojMLgQTUSZ"),
                serumVaultSigner: new web3_js_1.PublicKey("F8Vyqk3unwxkXukZFQeYyGmFfTG3CAX4v24iyrjEYBJV"),
                stakePoolProgramId: info_1.STAKE_PROGRAM_ID_V5,
                stakePoolId: new web3_js_1.PublicKey("GUzaohfNuFbBqQTnPgPSNciv3aUvriXYjQduRE3ZkqFw"),
                stakePoolAuthority: new web3_js_1.PublicKey("DgbCWnbXg43nmeiAveMCkUUPEpAr3rZo3iop3TyP6S63"),
                stakePoolLpAccount: new web3_js_1.PublicKey("J6ECnRDZEXcxuruvErXDWsPZn9czowKynUr9eDSQ4QeN"),
                stakePoolRewardAccount: new web3_js_1.PublicKey("38YS2N7VUb856QDsXHS1h8zv5556YgEy9zKbbL2mefjf"),
                stakePoolRewardAccountB: new web3_js_1.PublicKey("ANDJUfDryy3jY6DngwGRXVyxCJBT5JfojLDXwZYSpnEL"),
            },
            rewardsAmmInfo: {
                direction: 1,
                ammId: new web3_js_1.PublicKey('6UmmUiYoBjSrhakAobJw8BvkmJtDVxaeBtbt7rxWo1mg'),
                ammAuthority: new web3_js_1.PublicKey('5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1'),
                ammOpenOrders: new web3_js_1.PublicKey('J8u8nTHYtvudyqwLrXZboziN95LpaHFHpd97Jm5vtbkW'),
                ammTargetOrders: new web3_js_1.PublicKey('3cji8XW5uhtsA757vELVFAeJpskyHwbnTSceMFY5GjVT'),
                ammCoinAccount: new web3_js_1.PublicKey('FdmKUE4UMiJYFK5ogCngHzShuVKrFXBamPWcewDr31th'),
                ammPcAccount: new web3_js_1.PublicKey('Eqrhxd7bDUCH3MepKmdVkgwazXRzY6iHhEoBpY7yAohk'),
                poolWithdrawQueue: new web3_js_1.PublicKey('ERiPLHrxvjsoMuaWDWSTLdCMzRkQSo8SkLBLYEmSokyr'),
                poolTempLpTokenAccount: new web3_js_1.PublicKey('D1V5GMf3N26owUFcbz2qR5N4G81qPKQvS2Vc4SM73XGB'),
                serumProgramId: info_1.SERUM_PROGRAM_ID_V3,
                serumMarketId: new web3_js_1.PublicKey('2xiv8A5xrJ7RnGdxXB42uFEkYHJjszEhaJyKKt4WaLep'),
                serumBids: new web3_js_1.PublicKey('Hf84mYadE1VqSvVWAvCWc9wqLXak4RwXiPb4A91EAUn5'),
                serumAsks: new web3_js_1.PublicKey('DC1HsWWRCXVg3wk2NndS5LTbce3axwUwUZH1RgnV4oDN'),
                serumEventQueue: new web3_js_1.PublicKey('H9dZt8kvz1Fe5FyRisb77KcYTaN8LEbuVAfJSnAaEABz'),
                serumCoinVault: new web3_js_1.PublicKey('GGcdamvNDYFhAXr93DWyJ8QmwawUHLCyRqWL3KngtLRa'),
                serumPCVault: new web3_js_1.PublicKey('22jHt5WmosAykp3LPGSAKgY45p7VGh4DFWSwp21SWBVe'),
                serumVaultSigner: new web3_js_1.PublicKey('FmhXe9uG6zun49p222xt3nG1rBAkWvzVz7dxERQ6ouGw'),
            },
            rewardsAmmInfoB: {
                direction: 1,
                ammId: new web3_js_1.PublicKey('8tzS7SkUZyHPQY7gLqsMCXZ5EDCgjESUHcB17tiR1h3Z'),
                ammAuthority: new web3_js_1.PublicKey('5Q544fKrFoe6tsEbD7S8EmxGTJYAKtTVhAW5Q5pge4j1'),
                ammOpenOrders: new web3_js_1.PublicKey('GJwrRrNeeQKY2eGzuXGc3KBrBftYbidCYhmA6AZj2Zur'),
                ammTargetOrders: new web3_js_1.PublicKey('26LLpo8rscCpMxyAnJsqhqESPnzjMGiFdmXA4eF2Jrk5'),
                ammCoinAccount: new web3_js_1.PublicKey('zuLDJ5SEe76L3bpFp2Sm9qTTe5vpJL3gdQFT5At5xXG'),
                ammPcAccount: new web3_js_1.PublicKey('4usvfgPDwXBX2ySX11ubTvJ3pvJHbGEW2ytpDGCSv5cw'),
                poolWithdrawQueue: new web3_js_1.PublicKey('7c1VbXTB7Xqx5eQQeUxAu5o6GHPq3P1ByhDsnRRUWYxB'),
                poolTempLpTokenAccount: new web3_js_1.PublicKey('2sozAi6zXDUCCkpgG3usphzeCDm4e2jTFngbm5atSdC9'),
                serumProgramId: info_1.SERUM_PROGRAM_ID_V3,
                serumMarketId: new web3_js_1.PublicKey('ByRys5tuUWDgL73G8JBAEfkdFf8JWBzPBDHsBVQ5vbQA'),
                serumBids: new web3_js_1.PublicKey('AuL9JzRJ55MdqzubK4EutJgAumtkuFcRVuPUvTX39pN8'),
                serumAsks: new web3_js_1.PublicKey('8Lx9U9wdE3afdqih1mCAXy3unJDfzSaXFqAvoLMjhwoD'),
                serumEventQueue: new web3_js_1.PublicKey('6o44a9xdzKKDNY7Ff2Qb129mktWbsCT4vKJcg2uk41uy'),
                serumCoinVault: new web3_js_1.PublicKey('Ecfy8et9Mft9Dkavnuh4mzHMa2KWYUbBTA5oDZNoWu84'),
                serumPCVault: new web3_js_1.PublicKey('hUgoKy5wjeFbZrXDW4ecr42T4F5Z1Tos31g68s5EHbP'),
                serumVaultSigner: new web3_js_1.PublicKey('GVV4ZT9pccwy9d17STafFDuiSqFbXuRTdvKQ1zJX6ttX'),
            }
        },
    },
};
const activeSmartFarmingRaydiumPools = [];
exports.activeSmartFarmingRaydiumPools = activeSmartFarmingRaydiumPools;
(0, lodash_1.forEach)(exports.raydiumSmartFarmingPools, (value, key) => {
    activeSmartFarmingRaydiumPools.push({
        pool: key,
        platform: 'raydium',
        alias: value === null || value === void 0 ? void 0 : value.alias,
        poolInfoAccount: value.smartPoolInfo.poolInfoAccount,
        lpDecimals: value.basedFarmInfo.ammInfo.lpDecimals
    });
});

import { PublicKey } from '@solana/web3.js';
export interface SmartFarmingInfoBaseLendingItem {
    tknMint: PublicKey;
    lendingMarketAuthority?: PublicKey;
    lendingPoolInfoAccount: PublicKey;
    lendingPoolTknAccount: PublicKey;
    lendingPoolFeeAccount: PublicKey;
    lendingPoolShareMint: PublicKey;
    lendingPoolShareAccount: PublicKey;
    lendingPoolCreditMint: PublicKey;
    lendingPoolCreditAccount: PublicKey;
}
export interface SmartFarmingInfoAmmInfo {
    raydiumProgramId: PublicKey;
    ammId: PublicKey;
    ammAuthority: PublicKey;
    ammOpenOrders: PublicKey;
    ammTargetOrders: PublicKey;
    lpDecimals: number;
    ammCoinAccount: PublicKey;
    ammPcAccount: PublicKey;
    poolWithdrawQueue: PublicKey;
    poolTempLpTokenAccount: PublicKey;
    serumProgramId: PublicKey;
    serumMarketId: PublicKey;
    serumBids: PublicKey;
    serumAsks: PublicKey;
    serumEventQueue: PublicKey;
    serumCoinVault: PublicKey;
    serumPCVault: PublicKey;
    serumVaultSigner: PublicKey;
    stakePoolProgramId: PublicKey;
    stakePoolId: PublicKey;
    stakePoolAuthority: PublicKey;
    stakePoolLpAccount: PublicKey;
    stakePoolRewardAccount: PublicKey;
    stakePoolRewardAccountB: PublicKey;
}
export interface SmartFarmingPoolInfo {
    poolType: number;
    tokenMint0: PublicKey;
    tokenMint1: PublicKey;
    liquidityTokenMint: PublicKey;
    rewardsTokenMint: PublicKey;
    basedRewardsTokenMint: PublicKey;
    basedRewardsTokenMintB: PublicKey;
    poolInfoAccount: PublicKey;
    poolAuthority: PublicKey;
    vaultManagerAccount: PublicKey;
    farmInfoAccount: PublicKey;
    farmTokenAccount?: PublicKey;
    farmInfoAccountB?: PublicKey;
    farmTokenAccountB?: PublicKey;
    tokenAccount0: PublicKey;
    tokenAccount1: PublicKey;
    liquidityTokenAccount: PublicKey;
    basedRewardsTokenAccount: PublicKey;
    basedRewardsTokenAccountB: PublicKey;
    rewardsTokenAccount: PublicKey;
    borrowCreditTokenAccount0: PublicKey;
    borrowCreditTokenAccount1: PublicKey;
    rewardsTargetTokenAccount: PublicKey;
    rewardsTargetTokenAccountB: PublicKey;
}
export interface SmartFarmingInfoRewardsAmmInfo {
    direction: number;
    ammId: PublicKey;
    ammAuthority: PublicKey;
    ammOpenOrders: PublicKey;
    ammTargetOrders: PublicKey;
    ammCoinAccount: PublicKey;
    ammPcAccount: PublicKey;
    poolWithdrawQueue: PublicKey;
    poolTempLpTokenAccount: PublicKey;
    serumProgramId: PublicKey;
    serumMarketId: PublicKey;
    serumBids: PublicKey;
    serumAsks: PublicKey;
    serumEventQueue: PublicKey;
    serumCoinVault: PublicKey;
    serumPCVault: PublicKey;
    serumVaultSigner: PublicKey;
}
export interface SmartFarmingInfoItem {
    alias?: string;
    smartPoolInfo: SmartFarmingPoolInfo;
    basedLendingInfo: {
        0: SmartFarmingInfoBaseLendingItem;
        1: SmartFarmingInfoBaseLendingItem;
    };
    basedFarmInfo: {
        ammInfo: SmartFarmingInfoAmmInfo;
        rewardsAmmInfo: SmartFarmingInfoRewardsAmmInfo;
        rewardsAmmInfoB: SmartFarmingInfoRewardsAmmInfo;
    };
}
export declare const raydiumSmartFarmingPools: {
    [pool: string]: SmartFarmingInfoItem;
};
declare const activeSmartFarmingRaydiumPools: {
    pool: string;
    poolInfoAccount: PublicKey;
    lpDecimals: number;
    platform: string;
    alias?: string;
}[];
export { activeSmartFarmingRaydiumPools };

import { PublicKey } from '@solana/web3.js';
export declare const lyfOrcaProgramId: PublicKey;
export declare const Orca_Swap_ProgramId: PublicKey;
export declare const Orca_Stake_ProgramId: PublicKey;
export declare const ORCA_USER_FARM_INFO_ACCOUNT_LAYOUT: any;
export declare const ORCA_FARM_CONFIG: {
    'SOL-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            0: {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            1: {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
        };
    };
    'ORCA-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
        };
    };
    'ORCA-SOL': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
        };
    };
    'ATLAS-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: string;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
            };
        };
    };
    'POLIS-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: string;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
            };
        };
    };
    'mSOL-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: {
                    rewardsSwapPoolId: PublicKey;
                    rewardsSwapPoolAuthority: PublicKey;
                    rewardsTargetlpMint: PublicKey;
                    rewardsSwapfeeAccount: PublicKey;
                    rewardsSwapPoolRewardsVault: PublicKey;
                    rewardsSwapPoolTargetVault: PublicKey;
                };
            };
        };
    };
    'ORCA-mSOL': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: {
                    rewardsSwapPoolId: PublicKey;
                    rewardsSwapPoolAuthority: PublicKey;
                    rewardsTargetlpMint: PublicKey;
                    rewardsSwapfeeAccount: PublicKey;
                    rewardsSwapPoolRewardsVault: PublicKey;
                    rewardsSwapPoolTargetVault: PublicKey;
                };
            };
        };
    };
    'mSOL-USDT': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: {
                    rewardsSwapPoolId: PublicKey;
                    rewardsSwapPoolAuthority: PublicKey;
                    rewardsTargetlpMint: PublicKey;
                    rewardsSwapfeeAccount: PublicKey;
                    rewardsSwapPoolRewardsVault: PublicKey;
                    rewardsSwapPoolTargetVault: PublicKey;
                };
            };
        };
    };
    'BTC-mSOL': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: {
                    rewardsSwapPoolId: PublicKey;
                    rewardsSwapPoolAuthority: PublicKey;
                    rewardsTargetlpMint: PublicKey;
                    rewardsSwapfeeAccount: PublicKey;
                    rewardsSwapPoolRewardsVault: PublicKey;
                    rewardsSwapPoolTargetVault: PublicKey;
                };
            };
        };
    };
    'ETH-SOL': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: any;
        };
    };
    'NINJA-SOL': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: any;
            };
        };
    };
    'whETH-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: any;
        doubleDipStrategyRewardTknAccount: any;
        doubleDipStrategyFarmInfo: any;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: any;
        };
    };
    'whETH-SOL': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: any;
        doubleDipStrategyRewardTknAccount: any;
        doubleDipStrategyFarmInfo: any;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: any;
        };
    };
    'mSOL-whETH': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: {
                    rewardsSwapPoolId: PublicKey;
                    rewardsSwapPoolAuthority: PublicKey;
                    rewardsTargetlpMint: PublicKey;
                    rewardsSwapfeeAccount: PublicKey;
                    rewardsSwapPoolRewardsVault: PublicKey;
                    rewardsSwapPoolTargetVault: PublicKey;
                };
            };
        };
    };
    'SBR-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: any;
        doubleDipStrategyRewardTknAccount: any;
        doubleDipStrategyFarmInfo: any;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: any;
        };
    };
    'whETH-USDC-Strategy0': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: any;
        doubleDipStrategyRewardTknAccount: any;
        doubleDipStrategyFarmInfo: any;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
        };
    };
    'LIQ-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
            };
        };
    };
    'COPE-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: string;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
            };
        };
    };
    'PORT-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
            };
        };
    };
    'SAMO-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: any;
            };
        };
    };
    'ABR-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: any;
            };
        };
    };
    'SRM-SOL': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: any;
        doubleDipStrategyRewardTknAccount: any;
        doubleDipStrategyFarmInfo: any;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
        };
    };
    'FTT-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: any;
        doubleDipStrategyRewardTknAccount: any;
        doubleDipStrategyFarmInfo: any;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: any;
        };
    };
    'COPE-SOL': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: any;
        doubleDipStrategyRewardTknAccount: any;
        doubleDipStrategyFarmInfo: any;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
        };
    };
    'mSOL-SOL': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: {
                    rewardsSwapPoolId: PublicKey;
                    rewardsSwapPoolAuthority: PublicKey;
                    rewardsTargetlpMint: PublicKey;
                    rewardsSwapfeeAccount: PublicKey;
                    rewardsSwapPoolRewardsVault: PublicKey;
                    rewardsSwapPoolTargetVault: PublicKey;
                };
            };
        };
    };
    'SLND-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: any;
        doubleDipStrategyRewardTknAccount: any;
        doubleDipStrategyFarmInfo: any;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: any;
        };
    };
    'SOL-USDT': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: string;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: any;
        };
    };
    'ETH-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: any;
        };
    };
    'stSOL-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: {
                    rewardsSwapPoolId: PublicKey;
                    rewardsSwapPoolAuthority: PublicKey;
                    rewardsTargetlpMint: PublicKey;
                    rewardsLpDecimals: number;
                    rewardsSwapfeeAccount: PublicKey;
                    rewardsSwapPoolTargetVault: PublicKey;
                    rewardsSwapPoolRewardsVault: PublicKey;
                };
            };
        };
    };
    'SHDW-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: any;
            };
        };
    };
    'SHDW-SOL': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: any;
            };
        };
    };
    'BASIS-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: any;
            };
        };
    };
    'wUST-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: {
                    rewardsSwapPoolId: PublicKey;
                    rewardsSwapPoolAuthority: PublicKey;
                    rewardsTargetlpMint: PublicKey;
                    rewardsSwapfeeAccount: PublicKey;
                    rewardsSwapPoolRewardsVault: PublicKey;
                    rewardsSwapPoolTargetVault: PublicKey;
                };
            };
        };
    };
    'stSOL-USDT': {
        alias: string;
        orcaPoolId: string;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: {
                    rewardsSwapPoolId: PublicKey;
                    rewardsSwapPoolAuthority: PublicKey;
                    rewardsTargetlpMint: PublicKey;
                    rewardsLpDecimals: number;
                    rewardsSwapfeeAccount: PublicKey;
                    rewardsSwapPoolTargetVault: PublicKey;
                    rewardsSwapPoolRewardsVault: PublicKey;
                };
            };
        };
    };
    'SLC-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        alias: any;
        orcaPoolId: string;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: any;
            };
        };
    };
    'MEAN-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: any;
            };
        };
    };
    'ORCA-USDT': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: any;
        doubleDipStrategyRewardTknAccount: any;
        doubleDipStrategyFarmInfo: any;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: any;
        };
    };
    'ORCA-whETH': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: any;
        doubleDipStrategyRewardTknAccount: any;
        doubleDipStrategyFarmInfo: any;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: any;
        };
    };
    'GST-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: any;
        doubleDipStrategyRewardTknAccount: any;
        doubleDipStrategyFarmInfo: any;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            "0": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            "1": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: any;
        };
    };
    'GMT-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        alias: any;
        orcaPoolId: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: any;
        doubleDipStrategyRewardTknAccount: any;
        doubleDipStrategyFarmInfo: any;
        strategyRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            "0": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            "1": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: any;
        };
    };
    'stSOL-SOL': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        alias: any;
        orcaPoolId: string;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpTknAccount: PublicKey;
        strategyRewardTknAccount: PublicKey;
        strategyFarmTknAccount: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        doubleDipStrategyFarmTknAccount: PublicKey;
        doubleDipStrategyRewardTknAccount: PublicKey;
        doubleDipStrategyFarmInfo: PublicKey;
        strategyRewardsSwapTargetAccount: PublicKey;
        strategyDoubleDipRewardsSwapTargetAccount: PublicKey;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            "0": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            "1": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        ammInfo: {
            swapProgramId: PublicKey;
            swapPoolId: PublicKey;
            swapPoolAuthority: PublicKey;
            lpMint: PublicKey;
            lpDecimals: number;
            swapFeeAccount: PublicKey;
            swapTknVault0: PublicKey;
            swapTknVault1: PublicKey;
            rewardsSwapPoolId: PublicKey;
            rewardsSwapPoolAuthority: PublicKey;
            rewardsTargetlpMint: PublicKey;
            rewardsSwapfeeAccount: PublicKey;
            rewardsSwapPoolRewardsVault: PublicKey;
            rewardsSwapPoolTargetVault: PublicKey;
            stakeProgramId: PublicKey;
            stakeUserFarmInfoLayout: any;
            stakePoolRewardsMint: PublicKey;
            stakePoolFarmInfo: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolFarmTknMint: PublicKey;
            stakePoolRewardsTknVault: PublicKey;
            stakePoolLpVault: PublicKey;
            doubleDipPool: {
                rewardTknMint: PublicKey;
                doubleDipStakePoolFarmInfo: PublicKey;
                doubleDipStakePoolAuthority: PublicKey;
                doubleDipStakePoolFarmTknMint: PublicKey;
                doubleDipStakePoolRewardsTknVault: PublicKey;
                doubleDipStakePoolFarmTknVault: PublicKey;
                doubleDipRewardsSwapPool: {
                    rewardsSwapPoolId: PublicKey;
                    rewardsSwapPoolAuthority: PublicKey;
                    rewardsTargetlpMint: PublicKey;
                    rewardsLpDecimals: number;
                    rewardsSwapfeeAccount: PublicKey;
                    rewardsSwapPoolTargetVault: PublicKey;
                    rewardsSwapPoolRewardsVault: PublicKey;
                };
            };
        };
    };
};

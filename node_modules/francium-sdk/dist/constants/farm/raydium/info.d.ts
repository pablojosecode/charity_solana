import { PublicKey } from '@solana/web3.js';
export declare const STAKE_PROGRAM_ID: PublicKey;
export declare const STAKE_PROGRAM_ID_V5: PublicKey;
export declare const SERUM_PROGRAM_ID_V3: PublicKey;
export declare const LIQUIDITY_POOL_PROGRAM_ID_V4: PublicKey;
export declare const lyfRaydiumProgramId: PublicKey;
export declare const USER_STAKE_INFO_ACCOUNT_LAYOUT: any;
export declare const USER_STAKE_INFO_ACCOUNT_LAYOUT_V4: any;
export declare const RAYDIUM_FARM_CONFIG: {
    'RAY-USDC': {
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyBorrowCreditMint0: PublicKey;
        strategyBorrowCreditMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            0: {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                strategyCreditAccounts: PublicKey[];
            };
            1: {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'RAY-USDT': {
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyBorrowCreditMint0: PublicKey;
        strategyBorrowCreditMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            0: {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingMarketAuthority: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            1: {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'RAY-SRM': {
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyBorrowCreditMint0: PublicKey;
        strategyBorrowCreditMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            0: {
                lendingPoolInfoAccount: PublicKey;
                lendingMarketAuthority: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            1: {
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'RAY-ETH': {
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyBorrowCreditMint0: PublicKey;
        strategyBorrowCreditMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            0: {
                lendingPoolInfoAccount: PublicKey;
                lendingMarketAuthority: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            1: {
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'RAY-SOL': {
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyBorrowCreditMint0: PublicKey;
        strategyBorrowCreditMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            0: {
                lendingPoolInfoAccount: PublicKey;
                lendingMarketAuthority: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            1: {
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'ATLAS-USDC': {
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyBorrowCreditMint0: PublicKey;
        strategyBorrowCreditMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                strategyCreditAccounts: PublicKey[];
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'POLIS-USDC': {
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyBorrowCreditMint0: PublicKey;
        strategyBorrowCreditMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                strategyCreditAccounts: PublicKey[];
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'GRAPE-USDC': {
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyBorrowCreditMint0: PublicKey;
        strategyBorrowCreditMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                strategyCreditAccounts: PublicKey[];
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'SRM-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingMarketAuthority: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'weSUSHI-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'weUNI-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'whETH-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'whETH-SOL': {
        protocolVersion: number;
        protocolSubVersion: number;
        alias: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingMarketAuthority: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'STARS-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'weDYDX-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'weAXS-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'weSHIB-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'weMANA-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'weSAND-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'CAVE-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'GENE-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'whETH-USDC-Strategy-1': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'GENE-RAY': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'SONAR-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'ATLAS-RAY': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyBorrowCreditMint0: PublicKey;
        strategyBorrowCreditMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'POLIS-RAY': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyBorrowCreditMint0: PublicKey;
        strategyBorrowCreditMint1: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'DFL-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'LIKE-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'SAMO-RAY': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'wbWBNB-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'SOL-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        alias: string;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingMarketAuthority: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'SOL-USDT': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingMarketAuthority: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'REAL-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'MBS-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'PRISM-USDC': {
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'stSOL-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        alias: string;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'stSOL-USDT': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        alias: string;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'mSOL-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        alias: string;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'mSOL-USDT': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        alias: string;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
        rewardsAmmInfoB: {
            direction: number;
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'BTC-stSOL': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: any;
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'whETH-stSOL': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: any;
        rewardsAmmInfoB: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'ZBC-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'ATS-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            '0': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            '1': {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'RAY-whETH': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: any;
        strategyRewardsSwapTargetB: any;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            "0": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            "1": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: any;
        rewardsAmmInfoB: any;
    };
    'prANA-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            "0": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            "1": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        raydiumInfo: {
            coinMint: PublicKey;
            pcMint: PublicKey;
            lpMint: PublicKey;
            rewardsMintA: PublicKey;
            rewardsMintB: PublicKey;
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'RATIO-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            "0": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            "1": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        raydiumInfo: {
            coinMint: PublicKey;
            pcMint: PublicKey;
            lpMint: PublicKey;
            rewardsMintA: PublicKey;
            rewardsMintB: PublicKey;
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
        rewardsAmmInfo: {
            direction: number;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
        };
    };
    'SLCL-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            "0": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            "1": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'TTT-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            "0": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            "1": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
    'RUN-USDC': {
        needsLiquidate: boolean;
        needsCompound: boolean;
        protocolVersion: number;
        protocolSubVersion: number;
        programId: PublicKey;
        tknMint0: PublicKey;
        tknMint1: PublicKey;
        lpMint: PublicKey;
        rewardMint: PublicKey;
        rewardMintB: PublicKey;
        strategyAccount: PublicKey;
        strategyAuthority: PublicKey;
        strategyFarmInfo: PublicKey;
        strategyFeeAccount: PublicKey;
        strategyTknAccount0: PublicKey;
        strategyTknAccount1: PublicKey;
        strategyLpAccount: PublicKey;
        strategRewardAccount: PublicKey;
        strategRewardAccountB: PublicKey;
        strategyBorrowCreditAccount0: PublicKey;
        strategyBorrowCreditAccount1: PublicKey;
        strategyRewardsSwapTarget: PublicKey;
        strategyRewardsSwapTargetB: PublicKey;
        stakeUserFarmInfoLayout: any;
        lendingPoolConfig: {
            programId: PublicKey;
            marketInfoAccount: PublicKey;
            marketOwner: PublicKey;
            marketAuthority: PublicKey;
            "0": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
            };
            "1": {
                tknMint: PublicKey;
                lendingPoolInfoAccount: PublicKey;
                lendingPoolTknAccount: PublicKey;
                lendingPoolShareMint: PublicKey;
                lendingPoolShareAccount: PublicKey;
                lendingPoolCreditMint: PublicKey;
                lendingPoolCreditAccount: PublicKey;
                lendingPoolFeeAccount: PublicKey;
            };
        };
        raydiumInfo: {
            raydiumProgramId: PublicKey;
            ammId: PublicKey;
            ammAuthority: PublicKey;
            ammOpenOrders: PublicKey;
            ammTargetOrders: PublicKey;
            lpDecimals: number;
            ammCoinAccount: PublicKey;
            ammPcAccount: PublicKey;
            poolWithdrawQueue: PublicKey;
            poolTempLpTokenAccount: PublicKey;
            serumProgramId: PublicKey;
            serumMarketId: PublicKey;
            serumBids: PublicKey;
            serumAsks: PublicKey;
            serumEventQueue: PublicKey;
            serumCoinVault: PublicKey;
            serumPCVault: PublicKey;
            serumVaultSigner: PublicKey;
            stakePoolProgramId: PublicKey;
            stakePoolId: PublicKey;
            stakePoolAuthority: PublicKey;
            stakePoolLpAccount: PublicKey;
            stakePoolRewardAccount: PublicKey;
            stakePoolRewardAccountB: PublicKey;
        };
    };
};

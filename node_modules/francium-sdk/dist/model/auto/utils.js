"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findUserPositionInfoPDA = void 0;
const web3_js_1 = require("@solana/web3.js");
const raydium_1 = require("../../constants/auto/raydium");
const USER_INFO_SEED = "user_info_seed";
function findUserPositionInfoPDA(poolInfoAccount, owner, nonce) {
    return __awaiter(this, void 0, void 0, function* () {
        console.log(nonce);
        return yield web3_js_1.PublicKey.findProgramAddress([
            Buffer.from(USER_INFO_SEED),
            poolInfoAccount.toBuffer(),
            owner.toBuffer(),
            nonce.toArrayLike(Buffer, "le", 8)
        ], raydium_1.FRANCIUM_AUTO_VAULTS_PROGRAM_ID);
    });
}
exports.findUserPositionInfoPDA = findUserPositionInfoPDA;

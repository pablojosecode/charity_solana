"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rebalanceByEquity = exports.SWAP_FEE = void 0;
const bignumber_js_1 = require("bignumber.js");
exports.SWAP_FEE = 0;
function rebalanceByEquity(dstLeverage, userEquity, cryptoPrice, stableAmount) {
    const loss = 0;
    const _userEquity = new bignumber_js_1.default(userEquity);
    const _dstLeverage = new bignumber_js_1.default(dstLeverage);
    const dstTotalValue = _userEquity.multipliedBy(_dstLeverage).minus(new bignumber_js_1.default(loss));
    const longEquity = (userEquity - loss) / 4;
    const shortEquity = (userEquity - loss) * 3 / 4;
    const longPosition = {
        stableDebt: longEquity * 2,
    };
    const shortPosition = {
        cryptoDebt: shortEquity * 2 / cryptoPrice,
    };
    const NSADebtValue = dstTotalValue.div(new bignumber_js_1.default(2));
    return {
        NSADebtValue,
        SADebtValue: dstTotalValue.minus(_userEquity).minus(NSADebtValue),
        longPosition,
        shortPosition
    };
}
exports.rebalanceByEquity = rebalanceByEquity;

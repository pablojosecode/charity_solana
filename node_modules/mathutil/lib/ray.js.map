{"version":3,"sources":["../src/ray.ts"],"sourcesContent":["import type {Position} from './inputScalar'\nimport {Vector2} from './vector2'\n\ntype CastOptions = {\n  initial: boolean\n  origin: Position\n  magnitude: number\n  step: number\n}\nconst castOpts: CastOptions = {\n  initial: false,\n  origin: [0, 0],\n  magnitude: 0,\n  step: 1,\n}\n\nexport class Ray {\n  dir: Vector2\n\n  constructor(v: Vector2) {\n    if (!(v instanceof Vector2)) {\n      throw new Error('Ray should be instantiated with a direction vector')\n    }\n\n    this.dir = v.unit()\n  }\n\n  static of(v: Vector2) {\n    return new Ray(v)\n  }\n\n  /**\n   * Returns a generator function that yields the process of casting the ray\n   * @param opts <Object>\n   *   @param initial <Boolean> should output initial position\n   *   @param origin <Array> length-2 array describing origin position for cast\n   *   @param magnitude <Number> magnitude of the ray section being cast\n   *   @param step <Number> amount to step per operation\n   */\n  cast(opts: CastOptions) {\n    opts = {\n      ...castOpts,\n      ...opts,\n    }\n\n    const u = new Vector2(...this.dir.pos)\n    let len = 0\n\n    /**\n     * Generator that performs the cast.\n     * A cast happens along a section of the ray specified by the origin and\n     * the magnitude, which defines the final position returned. The step\n     * dictates the distance between returned values.\n     * The origin, or initial value, is often undesired and so its output is\n     * hidden behind the initial flag.\n     */\n    return function* () {\n      if (opts.initial) {\n        yield Vector2.of(...opts.origin)\n      }\n\n      while (len < opts.magnitude) {\n        len = len + opts.step\n        u.magnitude(len)\n\n        // @TODO add is mutative, although magnitude resets it it might\n        // still be safer to return a new vector, although likely slower\n        // yield u.add(opts.origin).pos\n        yield Vector2.add(opts.origin, u)\n      }\n    }\n  }\n\n  /**\n   * Project casts the ray synchronously and returns a function that accepts\n   * a callback for each iteration of the ray cast\n   * @param opts <Object>\n   *   @param initial <Boolean> should output initial position\n   *   @param origin <Array> length-2 array describing origin position for cast\n   *   @param magnitude <Number> magnitude of the ray section being cast\n   *   @param step <Number> amount to step per operation\n   */\n  project(opts: CastOptions) {\n    opts = {\n      ...castOpts,\n      ...opts,\n    }\n\n    const u = new Vector2(...this.dir.pos)\n    let len = 0\n\n    return (cb: (v: Vector2) => void) => {\n      while (len < opts.magnitude) {\n        len = len + opts.step\n        u.magnitude(len)\n        cb(Vector2.add(opts.origin, u))\n      }\n    }\n  }\n}\n"],"names":["castOpts","initial","origin","magnitude","step","Ray","of","v","cast","opts","u","dir","pos","len","add","project","cb","Error","unit"],"mappings":"oEACsB,GAAW,CAAX,QAAW,0fAQjC,KAAK,CAACA,QAAQ,CAAgB,CAAC,AAC7BC,OAAO,EAAE,CAAK,CACdC,MAAM,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CACdC,SAAS,CAAE,CAAC,CACZC,IAAI,CAAE,CAAC,AACT,CAAC,OAEYC,GAAG,QAWPC,EAAE,CAACC,CAAU,CAAE,CAAC,AACrB,MAAM,CAAC,GAAG,CAACF,GAAG,CAACE,CAAC,CAClB,CAAC,AAUDC,IAAI,CAACC,CAAiB,CAAE,CAAC,AACvBA,CAAI,kBACCT,QAAQ,CACRS,CAAI,EAGT,KAAK,CAACC,CAAC,CAAG,GAAG,CA5CK,QAAW,YA4CJ,IAAI,CAACC,GAAG,CAACC,GAAG,EACrC,GAAG,CAACC,CAAG,CAAG,CAAC,CAUX,MAAM,CAAC,QAAQ,GAAK,CAAC,AAKnB,GAAG,CAJCJ,CAAI,CAACR,OAAO,SAxDA,QAAW,SAyDXK,EAAE,IAAIG,CAAI,CAACP,MAAM,GAG1BW,CAAG,CAAGJ,CAAI,CAACN,SAAS,EACzBU,CAAG,EAASJ,CAAI,CAACL,IAAI,CACrBM,CAAC,CAACP,SAAS,CAACU,CAAG,QA9DD,QAAW,SAmEXC,GAAG,CAACL,CAAI,CAACP,MAAM,CAAEQ,CAAC,CAEpC,CAAC,AACH,CAAC,AAWDK,OAAO,CAACN,CAAiB,CAAE,CAAC,AAC1BA,CAAI,kBACCT,QAAQ,CACRS,CAAI,EAGT,KAAK,CAACC,CAAC,CAAG,GAAG,CAvFK,QAAW,YAuFJ,IAAI,CAACC,GAAG,CAACC,GAAG,EACrC,GAAG,CAACC,CAAG,CAAG,CAAC,CAEX,MAAM,CAAEG,CAAwB,EAAK,CAAC,AACpC,GAAG,EAAIH,CAAG,CAAGJ,CAAI,CAACN,SAAS,EACzBU,CAAG,EAASJ,CAAI,CAACL,IAAI,CACrBM,CAAC,CAACP,SAAS,CAACU,CAAG,EACfG,CAAE,CA9FY,QAAW,SA8FdF,GAAG,CAACL,CAAI,CAACP,MAAM,CAAEQ,CAAC,EAEjC,CAAC,AACH,CAAC,YA/EWH,CAAU,CAAE,CAAC,AACvB,EAAE,GAAIA,CAAC,YAnBW,QAAW,UAoB3B,KAAK,CAAC,GAAG,CAACU,KAAK,CAAC,CAAoD,qDAGtE,IAAI,CAACN,GAAG,CAAGJ,CAAC,CAACW,IAAI,EACnB,CAAC,SATUb,GAAG,CAAHA,GAAG"}
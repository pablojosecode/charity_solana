import{massageInputPoint as a}from"./inputScalar";export class Point{static of(b,c){if("number"==typeof b&&null!=c)return new Point(b,c);const d=a(b);return new Point(d[0],d[1])}static translate(e,f){const g=a(e),h=a(f);return Point.of(g[0]+h[0],g[1]+h[1])}get x(){return this.pos[0]}get y(){return this.pos[1]}set x(i){this.pos[0]=i}set y(j){this.pos[1]=j}position(){return this.pos}equal(k,l){if("number"==typeof k&&null!=l)return this.x===k&&this.y===l;const m=a(k);return this.equal(m[0],m[1])}equals(n,o){return this.equal(n,o)}translate(p,q){if("number"==typeof p&&null!=q)return this.x+=p,this.y+=q,this;const r=a(p);return this.translate(r[0],r[1])}scale(s){return this.x*=s,this.y*=s,this}constructor(t,u){this.pos=[t,u]}}
//# sourceMappingURL=point.js.map
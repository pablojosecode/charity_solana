{"version":3,"sources":["../src/lerp.ts"],"sourcesContent":["function _performLerp(value: number, min: number, max: number): number {\n  return min + value * (max - min)\n}\n\ntype CurriedReturn = (value: number) => number\n\nfunction _curryLerp(min: number, max: number): CurriedReturn {\n  return function lerp(value) {\n    return _performLerp(value, min, max)\n  }\n}\n\n/**\n * Interpolates between 2 values.\n * `value` is optional and can be curried.\n * `value` range 0...1 corresponds to min...max, if the value falls outside of\n * 0...1 then projection will occur.\n * @param min <Number> the minimum boundary\n * @param max <Number> the maximum boundary\n * @param value <?Float> the interpolation value\n */\nexport function lerp(min: number, max: number): CurriedReturn\nexport function lerp(min: number, max: number, value: number): number\nexport function lerp(\n  min: number,\n  max: number,\n  value?: number\n): CurriedReturn | number {\n  if (typeof value === 'undefined') {\n    return _curryLerp(min, max)\n  }\n\n  return _performLerp(value, min, max)\n}\n"],"names":["_performLerp","value","min","max","_curryLerp","lerp"],"mappings":"SAASA,YAAY,CAACC,CAAa,CAAEC,CAAW,CAAEC,CAAW,CAAU,CAAC,AACtE,MAAM,CAACD,CAAG,CAAGD,CAAK,EAAIE,CAAG,CAAGD,CAAG,CACjC,CAAC,SAIQE,UAAU,CAACF,CAAW,CAAEC,CAAW,CAAiB,CAAC,AAC5D,MAAM,CAAC,QAAQ,CAAMF,CAAK,CAAE,CAAC,AAC3B,MAAM,CAACD,YAAY,CAACC,CAAK,CAAEC,CAAG,CAAEC,CAAG,CACrC,CAAC,AACH,CAAC,AAaD,MAAM,UAAUE,IAAI,CAClBH,CAAW,CACXC,CAAW,CACXF,CAAc,CACU,CAAC,OACJ,IAAI,CAAJ,CAAW,GAArBA,CAAK,CACPG,UAAU,CAACF,CAAG,CAAEC,CAAG,EAGrBH,YAAY,CAACC,CAAK,CAAEC,CAAG,CAAEC,CAAG,CACrC,CAAC"}
import { Connection, PublicKey } from '@solana/web3.js';
import { TokenID, AssetPool, ApiAssetPool, AppConfig } from '../types';
import { Addresses } from '../addresses';
export declare function createAssetPoolLoader(connection: Connection, fetchPrice?: (token: TokenID) => Promise<number | undefined>, config?: AppConfig): Promise<AssetPoolLoader>;
export declare class AssetPoolLoader {
    private readonly connection;
    private readonly config;
    private fetchPrice;
    private readonly actionWrapper;
    private readonly addresses;
    constructor(connection: Connection, config: AppConfig, fetchPrice: (token: TokenID) => Promise<number | undefined>);
    getAssetPool(tokenId: TokenID): Promise<ApiAssetPool | undefined>;
}
export declare function normalizePool(tokenId: TokenID, mintKey: PublicKey, assetPoolRaw: AssetPool, addresses: Addresses, fetchPrice: (token: TokenID) => Promise<number | undefined>): Promise<ApiAssetPool | undefined>;

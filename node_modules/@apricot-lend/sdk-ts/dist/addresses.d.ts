import { AppConfig, TokenID } from "./types";
import { AccountMeta, PublicKey } from "@solana/web3.js";
export declare class Addresses {
    config: AppConfig;
    constructor(config: AppConfig);
    getProgramKey(): PublicKey;
    getAdminKey(): PublicKey;
    mintKeyStrToPoolId(mintKeyStr: string): number;
    getBasePda(): Promise<[PublicKey, number]>;
    getPricePda(): Promise<[PublicKey, number]>;
    getPoolListKey(basePda: PublicKey): Promise<PublicKey>;
    POOL_SUMMARIES_SEED: string;
    getPoolSummariesKey(): Promise<PublicKey>;
    getPriceSummariesKey(basePda: PublicKey): Promise<PublicKey>;
    static USER_STATS_SEED: string;
    getUserPagesStatsKey(): Promise<PublicKey>;
    getUsersPageKey(basePda: PublicKey, page_id: number): Promise<PublicKey>;
    getLmAptVault(): PublicKey;
    getAssetPoolKey(basePda: PublicKey, mintKeyStr: string): Promise<PublicKey>;
    getAssetPriceKey(pricePda: PublicKey, mintKeyStr: string): Promise<PublicKey>;
    getAssetPoolSplKey(basePda: PublicKey, mintKeyStr: string): Promise<PublicKey>;
    getAssetPoolStakeTableKey(mintKeyStr: string): Promise<PublicKey>;
    getUserInfoKey(walletKey: PublicKey): Promise<PublicKey>;
    poolIdToSeedStr(pool_id: number): string;
    poolIdToStakeTableSeedStr(pool_id: number): string;
    mintKeyStrToPoolSeedStr(mintKeyStr: string): string;
    mintKeyStrToStakeTableSeedStr(mintKeyStr: string): string;
    getLpTargetSwap(tokenId: TokenID): number;
    getLpDepositKeys(tokenId: TokenID): Promise<AccountMeta[]>;
    getLpWithdrawKeys(tokenId: TokenID): Promise<AccountMeta[]>;
    getLpStakeKeys(tokenId: TokenID): Promise<AccountMeta[]>;
    getLpFirstStakeKeys(tokenId: TokenID): Promise<AccountMeta[]>;
    getLpSecondStakeKeys(tokenId: TokenID): Promise<AccountMeta[]>;
    getFloatingLpTokenAccount(tokenId: TokenID): Promise<PublicKey>;
}

import { PublicKey, TransactionInstruction } from "@solana/web3.js";
import { Market, PairMarket, Swapper, TokenID } from "../types";
import { Parser } from "../utils/Parser";
export declare const SABER_SWAP_PROGRAM: PublicKey;
export declare class SaberMarket extends Market implements Swapper, PairMarket {
    name: string;
    tokenIdA: TokenID;
    tokenIdB: TokenID;
    swap: PublicKey;
    swapAuthority: PublicKey;
    swapVaultA: PublicKey;
    swapVaultB: PublicKey;
    adminFeeDestinationA: PublicKey;
    adminFeeDestinationB: PublicKey;
    constructor(name: string, tokenIdA: TokenID, tokenIdB: TokenID, swap: PublicKey, swapAuthority: PublicKey, swapVaultA: PublicKey, swapVaultB: PublicKey, adminFeeDestinationA: PublicKey, adminFeeDestinationB: PublicKey);
    getSwapper(): Swapper;
    INST_LAYOUT: Parser;
    createSwapInstructions(fromToken: TokenID, fromAmount: number, fromTokenAccount: PublicKey, toToken: TokenID, minToAmount: number, toTokenAccount: PublicKey, tradeOwner: PublicKey): Promise<TransactionInstruction[]>;
}
export declare const SABER_USTv2_USDC_MARKET: SaberMarket;
export declare const SABER_USDT_USDC_MARKET: SaberMarket;

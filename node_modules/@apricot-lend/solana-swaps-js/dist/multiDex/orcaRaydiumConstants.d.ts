import { PublicKey, TransactionInstruction } from "@solana/web3.js";
import { MultiMarket, PairMarket, MultiSwapper, TokenID } from "../types";
import { OrcaMarket } from "../orca";
import { RaydiumMarket } from "../raydium";
export declare class OrcaRaydiumMarket extends MultiMarket implements MultiSwapper, PairMarket {
    name: string;
    tokenIdA: TokenID;
    tokenIdM: TokenID;
    tokenIdB: TokenID;
    orcaMarket: OrcaMarket;
    raydiumMarket: RaydiumMarket;
    constructor(name: string, tokenIdA: TokenID, tokenIdM: TokenID, tokenIdB: TokenID, orcaMarket: OrcaMarket, raydiumMarket: RaydiumMarket);
    createMultiSwapInstructions(fromToken: TokenID, fromAmount: number, fromTokenAccount: PublicKey, middleToken: TokenID, middleTokenAccount: PublicKey, toToken: TokenID, minToAmount: number, toTokenAccount: PublicKey, tradeOwner: PublicKey): Promise<TransactionInstruction[]>;
}
export declare const ORCA_RAYDIUMN_MNDE_USDC_MARKET: OrcaRaydiumMarket;

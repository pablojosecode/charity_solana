/// <reference types="bn.js" />
import { SwapCurve, TradeDirection } from '.';
import { BN } from '@project-serum/anchor';
import { AccountInfo } from '@solana/web3.js';
import { Depeg, PoolFees, TokenMultiplier } from '../types';
export declare class StableSwap implements SwapCurve {
    private amp;
    private tokenMultiplier;
    private depeg;
    private extraAccounts;
    private onChainTime;
    constructor(amp: number, tokenMultiplier: TokenMultiplier, depeg: Depeg, extraAccounts: Map<String, AccountInfo<Buffer>>, onChainTime: number);
    private getBasePoolVirtualPrice;
    private updateDepegInfoIfExpired;
    private upscaleTokenA;
    private downscaleTokenA;
    private upscaleTokenB;
    private downscaleTokenB;
    computeOutAmount(sourceAmount: BN, swapSourceAmount: BN, swapDestinationAmount: BN, tradeDirection: TradeDirection): BN;
    computeD(tokenAAmount: BN, tokenBAmount: BN): BN;
    computeInAmount(destAmount: BN, swapSourceAmount: BN, swapDestinationAmount: BN, tradeDirection: TradeDirection): BN;
    computeImbalanceDeposit(depositAAmount: BN, depositBAmount: BN, swapTokenAAmount: BN, swapTokenBAmount: BN, lpSupply: BN, fees: PoolFees): BN;
    computeWithdrawOne(lpAmount: BN, lpSupply: BN, swapTokenAAmount: BN, swapTokenBAmount: BN, fees: PoolFees, tradeDirection: TradeDirection): BN;
}
//# sourceMappingURL=stable-swap.d.ts.map
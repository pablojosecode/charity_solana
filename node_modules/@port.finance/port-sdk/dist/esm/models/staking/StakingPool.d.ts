import { StakingPoolId } from "./StakingPoolId";
import { Parsed } from "../../serialization/Parsed";
import { TokenAccountId } from "../TokenAccountId";
import { Slot } from "../Slot";
import { ExchangeRate } from "../ExchangeRate";
import { Lamport } from "../basic";
import { RawData } from "../../serialization/RawData";
import { ReserveInfo } from "../ReserveInfo";
import { Apy } from "../Apy";
import { AssetPrice } from "../AssetPrice";
import { AuthorityId } from "../AuthorityId";
import Big from "big.js";
import type { TokenInfo } from "@solana/spl-token-registry";
export declare class StakingPool implements Parsed<StakingPoolId> {
    private readonly stakingPoolId;
    private readonly rewardTokenPool;
    private readonly subRewardTokenPool?;
    private readonly lastUpdate;
    private readonly endTime;
    private readonly earliestRewardClaimTime;
    private readonly duration;
    private readonly ratePerSlot;
    private readonly subRatePerSlot?;
    private readonly cumulativeRate;
    private readonly subCumulativeRate?;
    private readonly poolSize;
    private readonly ownerAuthority;
    private readonly adminAuthority;
    private constructor();
    static fromRaw(raw: RawData): StakingPool;
    getOwnerAuthorityId(): AuthorityId;
    getAdminAuthorityId(): AuthorityId;
    getId(): StakingPoolId;
    getStakingPoolId(): StakingPoolId;
    getRewardTokenPool(): TokenAccountId;
    getSubRewardTokenPool(): TokenAccountId | undefined;
    getLastUpdate(): Slot;
    getEndTime(): Slot;
    getEarliestRewardClaimTime(): Slot;
    getDuration(): Slot;
    getRatePerSlot(): ExchangeRate;
    getSubRatePerSlot(): ExchangeRate | undefined;
    getCumulativeRate(): ExchangeRate;
    getSubCumulativeRate(): ExchangeRate | undefined;
    getPoolSize(): Lamport;
    isPoolEnd(currentSlot: Slot): boolean;
    getEstimatedRate(currentSlot: Slot): ExchangeRate;
    getRewardApy(reserve: ReserveInfo, price: AssetPrice, tokenInfo: TokenInfo): Apy;
    getSubRewardApy(reserve: ReserveInfo, price: AssetPrice | Big, tokenInfo: TokenInfo): Apy;
    private getRewardApyInner;
}
//# sourceMappingURL=StakingPool.d.ts.map
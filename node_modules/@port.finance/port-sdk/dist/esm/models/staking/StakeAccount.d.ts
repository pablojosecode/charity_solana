import { Parsed } from "../../serialization/Parsed";
import { StakeAccountId } from "./StakeAccountId";
import { ExchangeRate } from "../ExchangeRate";
import { StakingPoolId } from "./StakingPoolId";
import { Lamport } from "../basic";
import { RawData } from "../../serialization/RawData";
export declare class StakeAccount implements Parsed<StakeAccountId> {
    private readonly stakeAccountId;
    private readonly stakingPoolId;
    private readonly startRate;
    private readonly depositedAmount;
    private readonly unclaimedReward;
    private constructor();
    static newAccount(stakeAccountId: StakeAccountId, stakingPoolId: StakingPoolId): StakeAccount;
    static fromRaw(raw: RawData): StakeAccount;
    getId(): StakeAccountId;
    getStakeAccountId(): StakeAccountId;
    getStakingPoolId(): StakingPoolId;
    getStartRate(): ExchangeRate;
    getDepositAmount(): Lamport;
    getUnclaimedReward(): Lamport;
    getTotalClaimableReward(rate: ExchangeRate): Lamport;
}
//# sourceMappingURL=StakeAccount.d.ts.map
{"version":3,"file":"QuantityContext.js","sourceRoot":"","sources":["../../../src/models/QuantityContext.ts"],"names":[],"mappings":"AAAA,OAAO,GAAG,MAAM,QAAQ,CAAC;AAEzB,MAAM,OAAO,eAAe;IAI1B,YAAoB,QAAgB,EAAE,SAAc;QAClD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAC9B,CAAC;IAEM,MAAM,CAAC,YAAY,CAAC,QAAgB;QACzC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3C,OAAO,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;QAC9B,OAAO,IAAI,eAAe,CAAC,QAAQ,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClE,CAAC;CACF","sourcesContent":["import Big from \"big.js\";\n\nexport class QuantityContext {\n  readonly decimals: number;\n  readonly multiplier: Big;\n\n  private constructor(decimals: number, increment: Big) {\n    this.decimals = decimals;\n    this.multiplier = increment;\n  }\n\n  public static fromDecimals(decimals: number): QuantityContext {\n    console.assert(Number.isInteger(decimals));\n    console.assert(decimals >= 0);\n    return new QuantityContext(decimals, new Big(10).pow(decimals));\n  }\n}\n"]}
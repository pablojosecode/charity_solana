import { Asset } from "./Asset";
import { Lamport } from "./basic";
export class AssetConfig {
    constructor(mintId, display, price, deposit, isDefault) {
        this.mintId = mintId;
        this.display = display;
        this.price = price;
        this.deposit = deposit;
        this.isDefault = isDefault !== null && isDefault !== void 0 ? isDefault : false;
    }
    checkIsDefault() {
        return this.isDefault;
    }
    getMintId() {
        return this.mintId;
    }
    getName() {
        return this.getDisplayConfig().getName();
    }
    getSymbol() {
        return this.getDisplayConfig().getSymbol();
    }
    getColor() {
        return this.getDisplayConfig().getColor();
    }
    getDisplayConfig() {
        return this.display;
    }
    getPriceDecimals() {
        return this.getPriceConfig().getDecimals();
    }
    getPriceConfig() {
        return this.price;
    }
    getReserveId() {
        var _a;
        return (_a = this.getDepositConfig()) === null || _a === void 0 ? void 0 : _a.getReserveId();
    }
    getMaxDeposit() {
        var _a;
        const raw = (_a = this.getDepositConfig()) === null || _a === void 0 ? void 0 : _a.getMax();
        return raw ? Asset.of(this.mintId, Lamport.of(raw)) : undefined;
    }
    getMinDeposit() {
        var _a;
        const raw = (_a = this.getDepositConfig()) === null || _a === void 0 ? void 0 : _a.getMin();
        return raw ? Asset.of(this.mintId, Lamport.of(raw)) : undefined;
    }
    getRemainAsset() {
        var _a;
        const raw = (_a = this.getDepositConfig()) === null || _a === void 0 ? void 0 : _a.getRemain();
        return raw ? Asset.of(this.mintId, Lamport.of(raw)) : undefined;
    }
    getDepositConfig() {
        return this.deposit;
    }
}
//# sourceMappingURL=AssetConfig.js.map
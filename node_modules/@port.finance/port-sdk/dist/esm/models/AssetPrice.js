import Big from "big.js";
import { Decimal } from "./basic";
export class AssetPrice extends Decimal {
    constructor(mintId, value) {
        super(value);
        this.mintId = mintId;
    }
    static of(mintId, value) {
        return new AssetPrice(mintId, value);
    }
    getMintId() {
        return this.mintId;
    }
    addFee(pct) {
        return this.multiply(new Big(1).add(pct.getRaw()));
    }
    print(config) {
        const decimals = config.getPriceDecimals();
        return "$" + this.raw.round(decimals, 1).toFixed(decimals); // RoundHalfUp
    }
    replaceWithValue(value) {
        return new AssetPrice(this.getMintId(), value);
    }
    isCompatibleWith(that) {
        return this.getMintId().equals(that.getMintId());
    }
}
//# sourceMappingURL=AssetPrice.js.map
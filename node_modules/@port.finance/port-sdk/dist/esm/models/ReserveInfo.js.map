{"version":3,"file":"ReserveInfo.js","sourceRoot":"","sources":["../../../src/models/ReserveInfo.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable new-cap */\nimport { ReserveId } from \"./ReserveId\";\nimport { Asset } from \"./Asset\";\nimport { Share } from \"./Share\";\nimport { AssetExchangeRate } from \"./AssetExchangeRate\";\nimport { ReserveUtilizationRatio } from \"./ReserveUtilizationRatio\";\nimport { ReserveBorrowRate } from \"./ReserveBorrowRate\";\nimport Big from \"big.js\";\nimport { MintId } from \"./MintId\";\nimport { Apy } from \"./Apy\";\nimport { OracleId } from \"./OracleId\";\nimport { MarketId } from \"./MarketId\";\nimport { TokenAccountId } from \"./TokenAccountId\";\nimport { Percentage } from \"./basic\";\nimport { AssetPrice } from \"./AssetPrice\";\nimport { QuantityContext } from \"./QuantityContext\";\nimport { AssetValue } from \"./AssetValue\";\nimport { Parsed } from \"../serialization/Parsed\";\nimport { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport {\n  borrowObligationLiquidityInstruction,\n  depositObligationCollateralInstruction,\n  depositReserveLiquidityInstruction,\n  redeemReserveCollateralInstruction,\n  refreshReserveInstruction,\n} from \"../instructions\";\nimport {\n  ReserveCollateral,\n  ReserveConfig,\n  ReserveData,\n  ReserveLayout,\n  ReserveLiquidity,\n} from \"../structs\";\nimport { RawData } from \"../serialization/RawData\";\nimport { StakingPoolId } from \"./staking/StakingPoolId\";\nimport { ExchangeRate } from \"./ExchangeRate\";\nimport { PORT_LENDING } from \"../constants\";\nimport BN from \"bn.js\";\n\nexport class ReserveInfo implements Parsed<ReserveId> {\n  private readonly reserveId: ReserveId;\n  readonly marketId: MarketId;\n  readonly asset: ReserveAssetInfo;\n  readonly share: ReserveTokenInfo;\n  readonly params: ReserveParams;\n  private readonly stakingPoolId: StakingPoolId | undefined;\n\n  // tricky\n  readonly proto: ReserveData;\n\n  constructor(\n    reserveId: ReserveId,\n    marketId: MarketId,\n    asset: ReserveAssetInfo,\n    share: ReserveTokenInfo,\n    params: ReserveParams,\n    stakingPoolId: StakingPoolId | undefined,\n    proto: ReserveData\n  ) {\n    this.reserveId = reserveId;\n    this.marketId = marketId;\n    this.asset = asset;\n    this.share = share;\n    this.params = params;\n    this.stakingPoolId = stakingPoolId;\n    this.proto = proto;\n  }\n\n  public static fromRaw(raw: RawData): ReserveInfo {\n    const buffer = raw.account.data;\n    const proto = ReserveLayout.decode(buffer) as ReserveData;\n\n    const marketId = MarketId.of(proto.lendingMarket);\n    const asset = ReserveAssetInfo.fromRaw(proto.liquidity);\n    const token = ReserveTokenInfo.fromRaw(proto.collateral);\n    const params = ReserveParams.fromRaw(asset.getMintId(), proto.config);\n    const stakingPoolId = proto.config.stakingPoolId;\n    return new ReserveInfo(\n      ReserveId.of(raw.pubkey),\n      marketId,\n      asset,\n      token,\n      params,\n      stakingPoolId,\n      proto\n    );\n  }\n\n  getProto(): ReserveData {\n    return this.proto;\n  }\n\n  getId(): ReserveId {\n    return this.getReserveId();\n  }\n\n  public getReserveId(): ReserveId {\n    return this.reserveId;\n  }\n\n  public getMarketId(): MarketId {\n    return this.marketId;\n  }\n\n  public getAssetMintId(): MintId {\n    return this.asset.getMintId();\n  }\n\n  public getAssetBalanceId(): TokenAccountId {\n    return this.asset.getSplAccountId();\n  }\n\n  public getShareMintId(): MintId {\n    return this.share.getMintId();\n  }\n\n  public getShareBalanceId(): TokenAccountId {\n    return this.share.getSplAccountId();\n  }\n\n  public getOracleId(): OracleId | null {\n    return this.asset.getOracleId();\n  }\n\n  public getFeeBalanceId(): TokenAccountId {\n    return this.asset.getFeeAccountId();\n  }\n\n  // new input arg\n  public getMarketCap(price?: AssetPrice): AssetValue {\n    const asset = this.getTotalAsset();\n    return new AssetValue(\n      asset,\n      asset.toValue(price ?? this.getMarkPrice(), this.getQuantityContext())\n    );\n  }\n\n  public getTotalAsset(): Asset {\n    return this.getAvailableAsset().add(this.getBorrowedAsset());\n  }\n\n  // new input arg\n  public getAvailableAssetValue(price?: AssetPrice): AssetValue {\n    const asset = this.getAvailableAsset();\n    return new AssetValue(\n      asset,\n      asset.toValue(price ?? this.getMarkPrice(), this.getQuantityContext())\n    );\n  }\n\n  public getAvailableAsset(): Asset {\n    return this.asset.getAvailableAsset();\n  }\n\n  // new input arg\n  public getBorrowedAssetValue(price?: AssetPrice): AssetValue {\n    const asset = this.getBorrowedAsset();\n    return new AssetValue(\n      asset,\n      asset.toValue(price ?? this.getMarkPrice(), this.getQuantityContext())\n    );\n  }\n\n  public getBorrowedAsset(): Asset {\n    return this.asset.getBorrowedAsset();\n  }\n\n  public getQuantityContext(): QuantityContext {\n    return this.asset.getQuantityContext();\n  }\n\n  public getMarkPrice(): AssetPrice {\n    return this.asset.getMarkPrice();\n  }\n\n  public getExchangeRatio(): AssetExchangeRate {\n    const asset = this.getTotalAsset();\n    const share = this.share.getIssuedShare();\n\n    const assetMintId = asset.getMintId();\n    const shareMintId = share.getMintId();\n    if (asset.isZero()) {\n      return new AssetExchangeRate(shareMintId, assetMintId);\n    }\n    const ratio = Percentage.fromOneBased(share.getRaw().div(asset.getRaw()));\n    return new AssetExchangeRate(shareMintId, assetMintId, ratio);\n  }\n\n  public getUtilizationRatio(): ReserveUtilizationRatio {\n    const total = this.getTotalAsset();\n    if (total.isZero()) {\n      return ReserveUtilizationRatio.na(total.getMintId());\n    }\n\n    const pct = Percentage.fromOneBased(\n      this.getBorrowedAsset().getRaw().div(total.getRaw())\n    );\n    return new ReserveUtilizationRatio(total.getMintId(), pct);\n  }\n\n  public getSupplyApy(): Apy {\n    const utilizationRatio = this.getUtilizationRatio();\n    const borrowApy = this.getBorrowApy();\n\n    if (!utilizationRatio.isPresent() || !borrowApy.isPresent()) {\n      return Apy.na();\n    }\n\n    const utilizationRatioRaw = utilizationRatio.getUnchecked();\n    const borrowApyRaw = borrowApy.getUnchecked();\n    return Apy.of(utilizationRatioRaw.mul(borrowApyRaw));\n  }\n\n  public getBorrowApy(): Apy {\n    const params = this.params;\n    const utilizationRatio = this.getUtilizationRatio();\n    const optimalUtilizationRatio = params.optimalUtilizationRatio;\n    const optimalBorrowRate = params.optimalBorrowRate;\n\n    if (\n      !utilizationRatio.isPresent() ||\n      !optimalUtilizationRatio.isPresent() ||\n      !optimalBorrowRate.isPresent()\n    ) {\n      return Apy.na();\n    }\n\n    const utilizationRatioRaw = utilizationRatio.getUnchecked();\n    const optimalUtilizationRatioRaw = optimalUtilizationRatio.getUnchecked();\n    const optimalBorrowRateRaw = optimalBorrowRate.getUnchecked();\n    if (\n      optimalUtilizationRatioRaw.eq(1) ||\n      utilizationRatioRaw.lt(optimalUtilizationRatioRaw)\n    ) {\n      const minBorrowRate = params.minBorrowRate;\n      if (!minBorrowRate.isPresent()) {\n        return Apy.na();\n      }\n\n      const minBorrowRateRaw = minBorrowRate.getUnchecked();\n      const normalizedFactor = utilizationRatioRaw.div(\n        optimalUtilizationRatioRaw\n      );\n      const borrowRateDiff = optimalBorrowRateRaw.sub(minBorrowRateRaw);\n      return Apy.of(normalizedFactor.mul(borrowRateDiff).add(minBorrowRateRaw));\n    }\n\n    const maxBorrowRate = params.maxBorrowRate;\n    if (!maxBorrowRate.isPresent()) {\n      return Apy.na();\n    }\n\n    const maxBorrowRateRaw = maxBorrowRate.getUnchecked();\n    const normalizedFactor = utilizationRatioRaw\n      .sub(optimalUtilizationRatioRaw)\n      .div(new Big(1).sub(optimalUtilizationRatioRaw));\n    const borrowRateDiff = maxBorrowRateRaw.sub(optimalBorrowRateRaw);\n\n    return Apy.of(\n      normalizedFactor.mul(borrowRateDiff).add(optimalBorrowRateRaw)\n    );\n  }\n\n  public getStakingPoolId(): StakingPoolId | undefined {\n    return this.stakingPoolId;\n  }\n\n  // add reserve instructions ,use in Sundial\n  public async getMarketAuthority(): Promise<[PublicKey, number]> {\n    return await PublicKey.findProgramAddress(\n      [this.getMarketId().toBuffer()],\n      PORT_LENDING\n    );\n  }\n\n  public async depositReserve({\n    amount,\n    userLiquidityWallet,\n    destinationCollateralWallet,\n    userTransferAuthority,\n  }: {\n    amount: BN;\n    userLiquidityWallet: PublicKey;\n    destinationCollateralWallet: PublicKey;\n    userTransferAuthority: PublicKey;\n  }): Promise<TransactionInstruction[]> {\n    const [authority] = await this.getMarketAuthority();\n    const ixs: TransactionInstruction[] = [];\n\n    ixs.push(\n      refreshReserveInstruction(\n        this.getReserveId(),\n        this.getOracleId() ?? null\n      ),\n      depositReserveLiquidityInstruction(\n        amount,\n        userLiquidityWallet,\n        destinationCollateralWallet,\n        this.getReserveId(),\n        this.getAssetBalanceId(),\n        this.getShareMintId(),\n        this.getMarketId(),\n        authority,\n        userTransferAuthority\n      )\n    );\n    return ixs;\n  }\n\n  public async depositObligationCollateral({\n    amount,\n    userCollateralWallet,\n    obligation,\n    obligationOwner,\n    userTransferAuthority,\n  }: {\n    amount: BN;\n    userCollateralWallet: PublicKey;\n    obligation: PublicKey;\n    obligationOwner: PublicKey;\n    userTransferAuthority: PublicKey;\n  }): Promise<TransactionInstruction[]> {\n    const [authority] = await this.getMarketAuthority();\n    const ixs: TransactionInstruction[] = [];\n\n    ixs.push(\n      refreshReserveInstruction(\n        this.getReserveId(),\n        this.getOracleId() ?? null\n      ),\n      depositObligationCollateralInstruction(\n        amount,\n        userCollateralWallet,\n        this.getShareBalanceId(),\n        this.getReserveId(),\n        obligation,\n        this.getMarketId(),\n        authority,\n        obligationOwner,\n        userTransferAuthority\n      )\n    );\n    return ixs;\n  }\n\n  public async borrowObligationLiquidity({\n    amount,\n    userWallet,\n    owner,\n    obligation,\n  }: {\n    amount: BN;\n    userWallet: PublicKey;\n    obligation: PublicKey;\n    owner: PublicKey;\n    userTransferAuthority: PublicKey;\n  }): Promise<TransactionInstruction[]> {\n    const [authority] = await this.getMarketAuthority();\n    const ixs: TransactionInstruction[] = [];\n\n    ixs.push(\n      borrowObligationLiquidityInstruction(\n        amount,\n        this.getAssetBalanceId(),\n        userWallet,\n        this.getReserveId(),\n        this.getFeeBalanceId(),\n        obligation,\n        this.getMarketId(),\n        authority,\n        owner\n      )\n    );\n    return ixs;\n  }\n\n  public async redeemCollateral({\n    amount,\n    userCollateralWallet,\n    destinationLiquidityWallet,\n    userTransferAuthority,\n  }: {\n    amount: BN;\n    userCollateralWallet: PublicKey;\n    destinationLiquidityWallet: PublicKey;\n    userTransferAuthority: PublicKey;\n  }): Promise<TransactionInstruction[]> {\n    const [authority] = await this.getMarketAuthority();\n    const ixs: TransactionInstruction[] = [];\n\n    ixs.push(\n      redeemReserveCollateralInstruction(\n        amount,\n        userCollateralWallet,\n        destinationLiquidityWallet,\n        this.getReserveId(),\n        this.getShareMintId(),\n        this.getAssetBalanceId(),\n        this.getMarketId(),\n        authority,\n        userTransferAuthority\n      )\n    );\n    return ixs;\n  }\n}\n\nexport class ReserveAssetInfo {\n  private readonly mintId: MintId;\n  private readonly oracleId: OracleId | null;\n  private readonly feeAccountId: TokenAccountId;\n  private readonly supplyAccountId: TokenAccountId;\n  private readonly available: Asset;\n  private readonly borrowed: Asset;\n  private readonly markPrice: AssetPrice;\n  private readonly cumulativeBorrowRate: ExchangeRate;\n  private readonly quantityContext: QuantityContext;\n\n  constructor(\n    mintId: MintId,\n    oracleId: OracleId | null,\n    feeBalanceId: TokenAccountId,\n    supplyAccountId: TokenAccountId,\n    available: Asset,\n    borrowed: Asset,\n    markPrice: AssetPrice,\n    cumulativeBorrowRate: ExchangeRate,\n    quantityContext: QuantityContext\n  ) {\n    this.mintId = mintId;\n    this.oracleId = oracleId;\n    this.feeAccountId = feeBalanceId;\n    this.supplyAccountId = supplyAccountId;\n    this.available = available;\n    this.borrowed = borrowed;\n    this.markPrice = markPrice;\n    this.cumulativeBorrowRate = cumulativeBorrowRate;\n    this.quantityContext = quantityContext;\n  }\n\n  public static fromRaw(raw: ReserveLiquidity): ReserveAssetInfo {\n    const mintId = raw.mintPubkey;\n    const oracleId =\n      raw.oracleOption === 1 ? MintId.of(raw.oraclePubkey) : null;\n    const feeAccountId = raw.feeReceiver;\n    const supplyBalanceId = raw.supplyPubkey;\n    const available = Asset.of(mintId, raw.availableAmount);\n    const borrowed = Asset.of(mintId, raw.borrowedAmountWads);\n    const markPrice = AssetPrice.of(mintId, raw.marketPrice);\n    const cumulativeBorrowRate = raw.cumulativeBorrowRateWads;\n    const quantityContext = QuantityContext.fromDecimals(raw.mintDecimals);\n    return new ReserveAssetInfo(\n      mintId,\n      oracleId,\n      feeAccountId,\n      supplyBalanceId,\n      available,\n      borrowed,\n      markPrice,\n      cumulativeBorrowRate,\n      quantityContext\n    );\n  }\n\n  public getMintId(): MintId {\n    return this.mintId;\n  }\n\n  public getOracleId(): OracleId | null {\n    return this.oracleId;\n  }\n\n  public getFeeAccountId(): TokenAccountId {\n    return this.feeAccountId;\n  }\n\n  public getSplAccountId(): TokenAccountId {\n    return this.supplyAccountId;\n  }\n\n  public getAvailableAsset(): Asset {\n    return this.available;\n  }\n\n  public getBorrowedAsset(): Asset {\n    return this.borrowed;\n  }\n\n  public getMarkPrice(): AssetPrice {\n    return this.markPrice;\n  }\n\n  public getCumulativeBorrowRate(): ExchangeRate {\n    return this.cumulativeBorrowRate;\n  }\n\n  public getQuantityContext(): QuantityContext {\n    return this.quantityContext;\n  }\n}\n\nexport class ReserveTokenInfo {\n  private readonly mintId: MintId;\n  private readonly splAccountId: TokenAccountId;\n  private readonly issuedShare: Share;\n\n  constructor(mintId: MintId, splAccount: TokenAccountId, issuedShare: Share) {\n    this.mintId = mintId;\n    this.splAccountId = splAccount;\n    this.issuedShare = issuedShare;\n  }\n\n  public static fromRaw(raw: ReserveCollateral): ReserveTokenInfo {\n    const mintId = raw.mintPubkey;\n    const splAccountId = raw.supplyPubkey;\n    const issuedShare = Share.of(mintId, raw.mintTotalSupply);\n    return new ReserveTokenInfo(mintId, splAccountId, issuedShare);\n  }\n\n  public getMintId(): MintId {\n    return this.mintId;\n  }\n\n  public getSplAccountId(): TokenAccountId {\n    return this.splAccountId;\n  }\n\n  public getIssuedShare(): Share {\n    return this.issuedShare;\n  }\n}\n\nexport class ReserveParams {\n  loanToValueRatio: Percentage;\n  optimalUtilizationRatio: ReserveUtilizationRatio;\n  optimalBorrowRate: ReserveBorrowRate;\n  minBorrowRate: ReserveBorrowRate;\n  maxBorrowRate: ReserveBorrowRate;\n  liquidationThreshold: Percentage;\n  liquidationPenalty: Percentage;\n  borrowFee: Percentage;\n\n  constructor(\n    loanToValueRatio: Percentage,\n    optimalUtilizationRatio: ReserveUtilizationRatio,\n    optimalBorrowRate: ReserveBorrowRate,\n    minBorrowRate: ReserveBorrowRate,\n    maxBorrowRate: ReserveBorrowRate,\n    liquidationThreshold: Percentage,\n    liquidationPenalty: Percentage,\n    borrowFee: Percentage\n  ) {\n    this.loanToValueRatio = loanToValueRatio;\n    this.optimalUtilizationRatio = optimalUtilizationRatio;\n    this.optimalBorrowRate = optimalBorrowRate;\n    this.minBorrowRate = minBorrowRate;\n    this.maxBorrowRate = maxBorrowRate;\n    this.liquidationThreshold = liquidationThreshold;\n    this.liquidationPenalty = liquidationPenalty;\n    this.borrowFee = borrowFee;\n  }\n\n  static fromRaw(mintId: MintId, config: ReserveConfig): ReserveParams {\n    const loanToValueRatio = config.loanToValueRatio;\n    const optimalUtilizationRatio = new ReserveUtilizationRatio(\n      mintId,\n      config.optimalUtilizationRate\n    );\n    const optimalBorrowRate = new ReserveBorrowRate(\n      mintId,\n      config.optimalBorrowRate\n    );\n    const minBorrowRate = new ReserveBorrowRate(mintId, config.minBorrowRate);\n    const maxBorrowRate = new ReserveBorrowRate(mintId, config.maxBorrowRate);\n    const liquidationThreshold = config.liquidationThreshold;\n    const liquidationPenalty = config.liquidationBonus;\n    const borrowFee = Percentage.fromOneBased(config.fees.borrowFeeWad);\n    return new ReserveParams(\n      loanToValueRatio,\n      optimalUtilizationRatio,\n      optimalBorrowRate,\n      minBorrowRate,\n      maxBorrowRate,\n      liquidationThreshold,\n      liquidationPenalty,\n      borrowFee\n    );\n  }\n}\n"]}
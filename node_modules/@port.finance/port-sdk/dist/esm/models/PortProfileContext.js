export class PortProfileContext {
    constructor(selectedProfile, allProfiles) {
        this.selectedProfile = selectedProfile;
        this.allProfiles = allProfiles;
    }
    static index(profiles, whitelist) {
        profiles = profiles.sort(byCollateralAndLoanCountDesc);
        let selected = whitelist
            ? profiles.find((p) => p.getProfileId().equals(whitelist))
            : undefined;
        if (!selected && profiles.length) {
            selected = profiles[0];
        }
        return new PortProfileContext(selected, profiles);
    }
    getSelectedProfile() {
        return this.selectedProfile;
    }
    getAllProfiles() {
        return this.allProfiles;
    }
}
function byCollateralAndLoanCountDesc(a, b) {
    const aCount = a.getCollaterals().length + a.getLoans().length;
    const bCount = b.getCollaterals().length + b.getLoans().length;
    return bCount - aCount;
}
//# sourceMappingURL=PortProfileContext.js.map
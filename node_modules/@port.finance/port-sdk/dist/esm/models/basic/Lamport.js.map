{"version":3,"file":"Lamport.js","sourceRoot":"","sources":["../../../../src/models/basic/Lamport.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAC;AAExC,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AAIlD,MAAM,OAAO,OAAQ,SAAQ,OAAgB;IAK3C,YAAoB,GAAc;QAChC,KAAK,CAAC,GAAG,CAAC,CAAC;IACb,CAAC;IAEM,MAAM,CAAC,IAAI;QAChB,OAAO,OAAO,CAAC,IAAI,CAAC;IACtB,CAAC;IAEM,MAAM,CAAC,GAAG;QACf,OAAO,OAAO,CAAC,GAAG,CAAC;IACrB,CAAC;IAEM,MAAM,CAAC,EAAE,CAAC,GAAc;QAC7B,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,IAAa,EAAE,QAAgB;QACjD,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAEM,KAAK;QACV,OAAO,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAEM,KAAK;QACV,mCAAmC;QACnC,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY;IACtD,CAAC;IAEM,gBAAgB,CAAC,KAAgB;QACtC,OAAO,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;;AAvCyB,YAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;AACtB,WAAG,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;AACrB,WAAG,GAAG,IAAI,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAwCtE,MAAM,YAAa,SAAQ,YAAqB;IAC9C,YAAmB,IAAa,EAAE,QAAgB;QAChD,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACxB,CAAC;IAES,OAAO,CAAC,GAAQ;QACxB,OAAO,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;CACF","sourcesContent":["import Big, { BigSource } from \"big.js\";\nimport { u64 } from \"@solana/spl-token\";\n\nimport { Decimal, DecimalField } from \"./Decimal\";\nimport { BigType } from \"../../serialization/BigType\";\nimport { Field } from \"../../serialization/Field\";\n\nexport class Lamport extends Decimal<Lamport> {\n  protected static readonly ZERO = new Lamport(0);\n  protected static readonly ONE = new Lamport(1);\n  protected static readonly MAX = new Lamport(\"18446744073709551615\");\n\n  private constructor(raw: BigSource) {\n    super(raw);\n  }\n\n  public static zero(): Lamport {\n    return Lamport.ZERO;\n  }\n\n  public static max(): Lamport {\n    return Lamport.MAX;\n  }\n\n  public static of(raw: BigSource): Lamport {\n    return new Lamport(raw);\n  }\n\n  public static field(type: BigType, property: string): Field<Lamport> {\n    return new LamportField(type, property);\n  }\n\n  public isTrivial(): boolean {\n    return this.lt(Lamport.ONE);\n  }\n\n  public isMax(): boolean {\n    return this.eq(Lamport.MAX);\n  }\n\n  public toU64(): u64 {\n    // eslint-disable-next-line new-cap\n    return new u64(this.raw.toFixed(0, 0)); // RoundDown\n  }\n\n  public replaceWithValue(value: BigSource): Lamport {\n    return Lamport.of(value);\n  }\n}\n\nclass LamportField extends DecimalField<Lamport> {\n  public constructor(type: BigType, property: string) {\n    super(type, property);\n  }\n\n  protected fromBig(big: Big): Lamport {\n    return Lamport.of(big);\n  }\n}\n"]}
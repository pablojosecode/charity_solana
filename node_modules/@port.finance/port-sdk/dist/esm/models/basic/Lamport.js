import { u64 } from "@solana/spl-token";
import { Decimal, DecimalField } from "./Decimal";
export class Lamport extends Decimal {
    constructor(raw) {
        super(raw);
    }
    static zero() {
        return Lamport.ZERO;
    }
    static max() {
        return Lamport.MAX;
    }
    static of(raw) {
        return new Lamport(raw);
    }
    static field(type, property) {
        return new LamportField(type, property);
    }
    isTrivial() {
        return this.lt(Lamport.ONE);
    }
    isMax() {
        return this.eq(Lamport.MAX);
    }
    toU64() {
        // eslint-disable-next-line new-cap
        return new u64(this.raw.toFixed(0, 0)); // RoundDown
    }
    replaceWithValue(value) {
        return Lamport.of(value);
    }
}
Lamport.ZERO = new Lamport(0);
Lamport.ONE = new Lamport(1);
Lamport.MAX = new Lamport("18446744073709551615");
class LamportField extends DecimalField {
    constructor(type, property) {
        super(type, property);
    }
    fromBig(big) {
        return Lamport.of(big);
    }
}
//# sourceMappingURL=Lamport.js.map
import Big from "big.js";
import * as BufferLayout from "@solana/buffer-layout";
import { UintField } from "./UIntField";
export class BigType {
    constructor(bytes, multiplier) {
        this.bytes = bytes;
        this.multiplier = multiplier;
    }
    getLayout() {
        if (this.bytes === 1) {
            return BufferLayout.u8();
        }
        if (this.bytes === 2) {
            return BufferLayout.u16();
        }
        if (this.bytes === 3) {
            return BufferLayout.u24();
        }
        if (this.bytes === 4) {
            return BufferLayout.u32();
        }
        return new UintField(this.bytes);
    }
    getBytes() {
        return this.bytes;
    }
    getMultiplier() {
        return this.multiplier;
    }
}
BigType.WAD = new Big(10).pow(18);
BigType.U8 = new BigType(1);
BigType.U16 = new BigType(2);
BigType.U32 = new BigType(4);
BigType.U64 = new BigType(8);
BigType.U128 = new BigType(16);
BigType.D64 = new BigType(8, BigType.WAD);
BigType.D128 = new BigType(16, BigType.WAD);
//# sourceMappingURL=BigType.js.map
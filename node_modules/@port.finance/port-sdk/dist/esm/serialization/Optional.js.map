{"version":3,"file":"Optional.js","sourceRoot":"","sources":["../../../src/serialization/Optional.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,YAAY,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,MAAM,OAAO,QAAY,SAAQ,KAAoB;IAGnD,YAAoB,KAAe;QACjC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAEM,MAAM,CAAC,EAAE,CAAI,KAAe;QACjC,OAAO,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAEM,MAAM,CAAC,CAAa,EAAE,MAAe;QAC1C,MAAM,IAAI,GAAG,YAAY,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,SAAS,CAAC;SAClB;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACpD,CAAC;CACF","sourcesContent":["import * as BufferLayout from \"@solana/buffer-layout\";\nimport { Field } from \"./Field\";\n\nexport class Optional<T> extends Field<T | undefined> {\n  private readonly delegate: Field<T>;\n\n  private constructor(field: Field<T>) {\n    super(field.span + 1, field.property);\n    this.delegate = field;\n  }\n\n  public static of<T>(field: Field<T>): Optional<T> {\n    return new Optional(field);\n  }\n\n  public decode(b: Uint8Array, offset?: number): T | undefined {\n    const flag = BufferLayout.u8().decode(b, offset);\n    if (!flag) {\n      return undefined;\n    }\n\n    return this.delegate.decode(b, (offset || 0) + 1);\n  }\n}\n"]}
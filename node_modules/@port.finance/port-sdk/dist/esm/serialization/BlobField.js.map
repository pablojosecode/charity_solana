{"version":3,"file":"BlobField.js","sourceRoot":"","sources":["../../../src/serialization/BlobField.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,YAAY,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,MAAM,OAAgB,SAAa,SAAQ,KAAQ;IAGjD,YAAsB,IAAY,EAAE,QAAiB;QACnD,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACxD,CAAC;IAEM,MAAM,CAAC,CAAa,EAAE,MAAe;QAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;CAGF","sourcesContent":["import * as BufferLayout from \"@solana/buffer-layout\";\nimport { Field } from \"./Field\";\n\nexport abstract class BlobField<T> extends Field<T> {\n  private readonly delegate: BufferLayout.Blob;\n\n  protected constructor(span: number, property?: string) {\n    super(span, property);\n    this.delegate = new BufferLayout.Blob(span, property);\n  }\n\n  public decode(b: Uint8Array, offset?: number): T {\n    const blob = this.delegate.decode(b, offset);\n    return this.fromBuffer(blob);\n  }\n\n  protected abstract fromBuffer(buffer: Buffer): T;\n}\n"]}
{"version":3,"file":"Instructions.js","sourceRoot":"","sources":["../../../src/utils/Instructions.ts"],"names":[],"mappings":"AAEA,MAAM,CAAN,IAAY,UAKX;AALD,WAAY,UAAU;IACpB,iDAAW,CAAA;IACX,2CAAQ,CAAA;IACR,6CAAS,CAAA;IACT,+CAAU,CAAA;AACZ,CAAC,EALW,UAAU,KAAV,UAAU,QAKrB;AAED,MAAM,UAAU,SAAS,CAAC,GAAc,EAAE,IAAgB;IACxD,QAAQ,IAAI,EAAE;QACZ,KAAK,UAAU,CAAC,IAAI;YAClB,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;QAC7D,KAAK,UAAU,CAAC,KAAK;YACnB,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;QAC5D,KAAK,UAAU,CAAC,MAAM;YACpB,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;QAC5D;YACE,MAAM,IAAI,KAAK,CAAC,uBAAuB,IAAI,EAAE,CAAC,CAAC;KAClD;AACH,CAAC","sourcesContent":["import { AccountMeta, PublicKey } from \"@solana/web3.js\";\n\nexport enum AccessType {\n  UNKNOWN = 0,\n  READ = 1,\n  WRITE = 2,\n  SIGNER = 3,\n}\n\nexport function getAccess(key: PublicKey, type: AccessType): AccountMeta {\n  switch (type) {\n    case AccessType.READ:\n      return { pubkey: key, isSigner: false, isWritable: false };\n    case AccessType.WRITE:\n      return { pubkey: key, isSigner: false, isWritable: true };\n    case AccessType.SIGNER:\n      return { pubkey: key, isSigner: true, isWritable: false };\n    default:\n      throw new Error(`Unknown access type ${type}`);\n  }\n}\n"]}
{"version":3,"file":"createLendingMarket.js","sourceRoot":"","sources":["../../../../src/instructions/lending/createLendingMarket.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AACrD,OAAO,EAEL,kBAAkB,EAClB,sBAAsB,GACvB,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,OAAO,KAAK,YAAY,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACjE,OAAO,KAAK,MAAM,MAAM,4BAA4B,CAAC;AACrD,OAAO,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AAEnD,mBAAmB;AACnB,yBAAyB;AACzB,sBAAsB;AACtB,2BAA2B;AAC3B,IAAI;AAEJ,MAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC;IACrC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC;IAC9B,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;IACzB,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,eAAe,CAAC;CACvC,CAAC,CAAC;AAEH,oCAAoC;AACpC,EAAE;AACF,yCAAyC;AACzC,EAAE;AACF,4DAA4D;AAC5D,yBAAyB;AACzB,8BAA8B;AAC9B,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAC1C,KAAgB,EAChB,aAAqB,EACrB,aAAwB,EACxB,mBAA8B,YAAY,EAClB,EAAE;IAC1B,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3C,UAAU,CAAC,MAAM,CACf;QACE,WAAW,EAAE,kBAAkB,CAAC,iBAAiB;QACjD,KAAK;QACL,aAAa;KACd,EACD,IAAI,CACL,CAAC;IAEF,MAAM,IAAI,GAAG;QACX,SAAS,CAAC,aAAa,EAAE,UAAU,CAAC,KAAK,CAAC;QAC1C,SAAS,CAAC,kBAAkB,EAAE,UAAU,CAAC,IAAI,CAAC;QAC9C,SAAS,CAAC,gBAAgB,EAAE,UAAU,CAAC,IAAI,CAAC;KAC7C,CAAC;IAEF,OAAO,IAAI,sBAAsB,CAAC;QAChC,IAAI;QACJ,SAAS,EAAE,gBAAgB;QAC3B,IAAI;KACL,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport {\n  PublicKey,\n  SYSVAR_RENT_PUBKEY,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { Buffer } from \"buffer\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport { PORT_LENDING } from \"../../constants\";\nimport { AccessType, getAccess } from \"../../utils/Instructions\";\nimport * as Layout from \"../../serialization/layout\";\nimport { LendingInstruction } from \"./instruction\";\n\n// interface Data {\n//   instruction: number;\n//   owner: PublicKey;\n//   quoteCurrency: Buffer;\n// }\n\nconst DataLayout = BufferLayout.struct([\n  BufferLayout.u8(\"instruction\"),\n  Layout.publicKey(\"owner\"),\n  BufferLayout.blob(32, \"quoteCurrency\"),\n]);\n\n// Initializes a new lending market.\n//\n// Accounts expected by this instruction:\n//\n//   0. `[writable]` Lending market account - uninitialized.\n//   1. `[]` Rent sysvar.\n//   2. `[]` Token program id.\nexport const initLendingMarketInstruction = (\n  owner: PublicKey,\n  quoteCurrency: Buffer,\n  lendingMarket: PublicKey,\n  lendingProgramId: PublicKey = PORT_LENDING\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: LendingInstruction.InitLendingMarket,\n      owner,\n      quoteCurrency,\n    },\n    data\n  );\n\n  const keys = [\n    getAccess(lendingMarket, AccessType.WRITE),\n    getAccess(SYSVAR_RENT_PUBKEY, AccessType.READ),\n    getAccess(TOKEN_PROGRAM_ID, AccessType.READ),\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId: lendingProgramId,\n    data,\n  });\n};\n"]}
{"version":3,"file":"withdrawFee.js","sourceRoot":"","sources":["../../../../src/instructions/lending/withdrawFee.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,kBAAkB,EAClB,sBAAsB,GACvB,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AACrD,OAAO,KAAK,YAAY,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACjE,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAE/C,+BAA+B;AAC/B,yCAAyC;AACzC,EAAE;AACF,4BAA4B;AAC5B,oCAAoC;AACpC,8CAA8C;AAC9C,wCAAwC;AACxC,wCAAwC;AACxC,4CAA4C;AAC5C,yBAAyB;AACzB,8BAA8B;AAC9B,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,aAAwB,EAAE,IAAI;AAC9B,mBAA8B,EAAE,IAAI;AACpC,4BAAuC,EAAE,IAAI;AAC7C,wBAAmC,EAAE,IAAI;AACzC,gBAA2B,EAAE,IAAI;AACjC,YAAuB,EAAE,IAAI;AAC7B,mBAA8B,YAAY,EAClB,EAAE;IAC1B,MAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IACzE,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3C,UAAU,CAAC,MAAM,CACf;QACE,WAAW,EAAE,kBAAkB,CAAC,WAAW;KAC5C,EACD,IAAI,CACL,CAAC;IACF,MAAM,IAAI,GAAG;QACX,SAAS,CAAC,aAAa,EAAE,UAAU,CAAC,KAAK,CAAC;QAC1C,SAAS,CAAC,mBAAmB,EAAE,UAAU,CAAC,IAAI,CAAC;QAC/C,SAAS,CAAC,4BAA4B,EAAE,UAAU,CAAC,IAAI,CAAC;QACxD,SAAS,CAAC,wBAAwB,EAAE,UAAU,CAAC,MAAM,CAAC;QACtD,SAAS,CAAC,gBAAgB,EAAE,UAAU,CAAC,KAAK,CAAC;QAC7C,SAAS,CAAC,YAAY,EAAE,UAAU,CAAC,KAAK,CAAC;QACzC,SAAS,CAAC,kBAAkB,EAAE,UAAU,CAAC,IAAI,CAAC;QAC9C,SAAS,CAAC,gBAAgB,EAAE,UAAU,CAAC,IAAI,CAAC;KAC7C,CAAC;IAEF,OAAO,IAAI,sBAAsB,CAAC;QAChC,IAAI;QACJ,SAAS,EAAE,gBAAgB;QAC3B,IAAI;KACL,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import {\n  PublicKey,\n  SYSVAR_RENT_PUBKEY,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport { LendingInstruction } from \"./instruction\";\nimport { AccessType, getAccess } from \"../../utils/Instructions\";\nimport { PORT_LENDING } from \"../../constants\";\n\n// Withdraw fee from a reserve.\n// Accounts expected by this instruction:\n//\n//   0. `[]` Reserve account\n//   1. `[]` Lending market account.\n//   2. `[]` Derived lending market authority.\n//   3. `[signer]` Lending market owner.\n//   4. `[writable]` Reserve fee account\n//   5. `[writable]` Destination fee account\n//   6. `[]` Rent sysvar.\n//   7. `[]` Token program id.\nexport const withdrawFeeInstruction = (\n  reservePubkey: PublicKey, // 0\n  lendingMarketPubkey: PublicKey, // 1\n  lendingMarketAuthorityPubkey: PublicKey, // 2\n  lendingMarketOwnerPubkey: PublicKey, // 3\n  reserveFeePubkey: PublicKey, // 4\n  dstFeePubkey: PublicKey, // 5\n  lendingProgramId: PublicKey = PORT_LENDING\n): TransactionInstruction => {\n  const dataLayout = BufferLayout.struct([BufferLayout.u8(\"instruction\")]);\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: LendingInstruction.WithdrawFee,\n    },\n    data\n  );\n  const keys = [\n    getAccess(reservePubkey, AccessType.WRITE),\n    getAccess(lendingMarketPubkey, AccessType.READ),\n    getAccess(lendingMarketAuthorityPubkey, AccessType.READ),\n    getAccess(lendingMarketOwnerPubkey, AccessType.SIGNER),\n    getAccess(reserveFeePubkey, AccessType.WRITE),\n    getAccess(dstFeePubkey, AccessType.WRITE),\n    getAccess(SYSVAR_RENT_PUBKEY, AccessType.READ),\n    getAccess(TOKEN_PROGRAM_ID, AccessType.READ),\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId: lendingProgramId,\n    data,\n  });\n};\n"]}
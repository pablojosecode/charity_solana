{"version":3,"file":"createReserve.js","sourceRoot":"","sources":["../../../../src/instructions/lending/createReserve.ts"],"names":[],"mappings":"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","sourcesContent":["import { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport {\n  PublicKey,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { PORT_LENDING } from \"../../constants\";\nimport {\n  ReserveConfigProtoLayout,\n  ReserveConfigProto,\n} from \"../../structs/ReserveData\";\nimport { LendingInstruction } from \"./instruction\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport * as Layout from \"../../serialization/layout\";\nimport BN from \"bn.js\";\nimport { AccessType, getAccess } from \"../../utils/Instructions\";\n\n// interface Data {\n//   instruction: number;\n//   liquidityAmount: bigint;\n//   option: number;\n//   marketPrice: BN;\n//   config: ReserveConfigProto;\n// }\n\n// Initializes a new lending market reserve.\n//\n// Accounts expected by this instruction:\n//\n//   0. `[writable]` Source liquidity token account.\n//                     $authority can transfer $liquidity_amount.\n//   1. `[writable]` Destination collateral token account - uninitialized.\n//   2. `[writable]` Reserve account - uninitialized.\n//   3. `[]` Reserve liquidity SPL Token mint.\n//   4. `[writable]` Reserve liquidity supply SPL Token account - uninitialized.\n//   5. `[writable]` Reserve liquidity fee receiver - uninitialized.\n//   6. `[writable]` Reserve collateral SPL Token mint - uninitialized.\n//   7. `[writable]` Reserve collateral token supply - uninitialized.\n//   8 `[]` Lending market account.\n//   9 `[]` Derived lending market authority.\n//   10 `[signer]` Lending market owner.\n//   11 `[signer]` User transfer authority ($authority).\n//   12 `[]` Clock sysvar.\n//   13 `[]` Rent sysvar.\n//   14 `[]` Token program id.\n//   15 `[optional]` Oracle price account, pyth or switchboard.\n//           This will be used as the reserve liquidity oracle account.\nexport const initReserveInstruction = (\n  liquidityAmount: number | BN,\n  option: number,\n  price: BN,\n  config: ReserveConfigProto,\n  sourceLiquidity: PublicKey,\n  destinationCollateral: PublicKey,\n  reserve: PublicKey,\n  liquidityMint: PublicKey,\n  liquiditySupply: PublicKey,\n  liquidityFeeReceiver: PublicKey,\n  pythPrice: PublicKey,\n  collateralMint: PublicKey,\n  collateralSupply: PublicKey,\n  lendingMarket: PublicKey,\n  lendingMarketAuthority: PublicKey,\n  lendingMarketOwner: PublicKey,\n  transferAuthority: PublicKey,\n  lendingProgramId: PublicKey = PORT_LENDING\n): TransactionInstruction => {\n  const dataLayout = BufferLayout.struct([\n    BufferLayout.u8(\"instruction\"),\n    Layout.uint64(\"liquidityAmount\"),\n    BufferLayout.u32(\"option\"),\n    Layout.uint128(\"marketPrice\"),\n    // eslint-disable-next-line new-cap\n    ReserveConfigProtoLayout(\"config\"),\n  ]);\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: LendingInstruction.InitReserve,\n      option,\n      marketPrice: new BN(price),\n      liquidityAmount: new BN(liquidityAmount),\n      config: { ...config },\n    },\n    data\n  );\n\n  const keys = [\n    getAccess(sourceLiquidity, AccessType.WRITE),\n    getAccess(destinationCollateral, AccessType.WRITE),\n    getAccess(reserve, AccessType.WRITE),\n    getAccess(liquidityMint, AccessType.READ),\n    getAccess(liquiditySupply, AccessType.WRITE),\n    getAccess(liquidityFeeReceiver, AccessType.WRITE),\n    getAccess(collateralMint, AccessType.WRITE),\n    getAccess(collateralSupply, AccessType.WRITE),\n    getAccess(lendingMarket, AccessType.READ),\n    getAccess(lendingMarketAuthority, AccessType.READ),\n    getAccess(lendingMarketOwner, AccessType.SIGNER),\n    getAccess(transferAuthority, AccessType.SIGNER),\n    getAccess(SYSVAR_CLOCK_PUBKEY, AccessType.READ),\n    getAccess(SYSVAR_RENT_PUBKEY, AccessType.READ),\n    getAccess(TOKEN_PROGRAM_ID, AccessType.READ),\n  ];\n  if (pythPrice && option === 0) {\n    keys.push(getAccess(pythPrice, AccessType.READ));\n  }\n\n  return new TransactionInstruction({\n    keys,\n    programId: lendingProgramId,\n    data,\n  });\n};\n"]}
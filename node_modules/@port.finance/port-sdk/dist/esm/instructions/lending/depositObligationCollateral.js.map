{"version":3,"file":"depositObligationCollateral.js","sourceRoot":"","sources":["../../../../src/instructions/lending/depositObligationCollateral.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  PublicKey,\n  SYSVAR_CLOCK_PUBKEY,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\n\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport * as Layout from \"../../serialization/layout\";\n\nimport { LendingInstruction } from \"./instruction\";\nimport { AccessType, getAccess } from \"../../utils/Instructions\";\nimport BN from \"bn.js\";\nimport { PORT_LENDING, PORT_STAKING } from \"../../constants\";\n\n// Deposit collateral to an obligation. Requires a refreshed reserve.\n//\n// Accounts expected by this instruction:\n//\n//   0. `[writable]` Source collateral token account.\n//                     Minted by deposit reserve collateral mint.\n//                     $authority can transfer $collateral_amount.\n//   1. `[writable]` Destination deposit reserve collateral supply SPL Token account.\n//   2. `[]` Deposit reserve account - refreshed.\n//   3. `[writable]` Obligation account.\n//   4. `[]` Lending market account.\n//   5. `[]` Derived lending market authority.\n//   6. `[signer]` Obligation owner.\n//   7. `[signer]` User transfer authority ($authority).\n//   8. `[]` Clock sysvar.\n//   9. `[]` Token program id.\nexport const depositObligationCollateralInstruction = (\n  collateralAmount: number | BN,\n  srcCollateralPubkey: PublicKey, // 0\n  dstCollateralPubkey: PublicKey, // 1\n  depositReservePubkey: PublicKey, // 2\n  obligationPubkey: PublicKey, // 3\n  lendingMarketPubkey: PublicKey, // 4\n  marketAuthorityPubkey: PublicKey, // 5\n  obligationOwnerPubkey: PublicKey, // 6\n  transferAuthorityPubkey: PublicKey, // 7\n  lendingProgramId: PublicKey = PORT_LENDING,\n  stakeAccountPubkey?: PublicKey, // 8\n  stakingPoolPubkey?: PublicKey // 9\n): TransactionInstruction => {\n  const dataLayout = BufferLayout.struct([\n    BufferLayout.u8(\"instruction\"),\n    Layout.uint64(\"collateralAmount\"),\n  ]);\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: LendingInstruction.DepositObligationCollateral,\n      collateralAmount: new BN(collateralAmount),\n    },\n    data\n  );\n\n  const keys = [\n    getAccess(srcCollateralPubkey, AccessType.WRITE),\n    getAccess(dstCollateralPubkey, AccessType.WRITE),\n    getAccess(depositReservePubkey, AccessType.READ),\n    getAccess(obligationPubkey, AccessType.WRITE),\n    getAccess(lendingMarketPubkey, AccessType.READ),\n    getAccess(marketAuthorityPubkey, AccessType.READ),\n    getAccess(obligationOwnerPubkey, AccessType.SIGNER),\n    getAccess(transferAuthorityPubkey, AccessType.SIGNER),\n    getAccess(SYSVAR_CLOCK_PUBKEY, AccessType.READ),\n    getAccess(TOKEN_PROGRAM_ID, AccessType.READ),\n  ];\n\n  if (stakeAccountPubkey && stakingPoolPubkey) {\n    keys.push(\n      getAccess(stakeAccountPubkey, AccessType.WRITE),\n      getAccess(stakingPoolPubkey, AccessType.WRITE),\n      getAccess(PORT_STAKING, AccessType.READ)\n    );\n  }\n\n  return new TransactionInstruction({\n    keys,\n    programId: lendingProgramId,\n    data,\n  });\n};\n"]}
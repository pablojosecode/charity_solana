{"version":3,"file":"repayObligationLiquidity.js","sourceRoot":"","sources":["../../../../src/instructions/lending/repayObligationLiquidity.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,mBAAmB,EACnB,sBAAsB,GACvB,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AACrD,OAAO,KAAK,YAAY,MAAM,uBAAuB,CAAC;AACtD,OAAO,KAAK,MAAM,MAAM,4BAA4B,CAAC;AACrD,OAAO,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACjE,OAAO,EAAE,MAAM,OAAO,CAAC;AACvB,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAE/C,sFAAsF;AACtF,EAAE;AACF,yCAAyC;AACzC,EAAE;AACF,oDAAoD;AACpD,8DAA8D;AAC9D,iEAAiE;AACjE,kFAAkF;AAClF,uDAAuD;AACvD,oDAAoD;AACpD,oCAAoC;AACpC,wDAAwD;AACxD,0BAA0B;AAC1B,8BAA8B;AAC9B,MAAM,UAAU,mCAAmC,CACjD,eAA4B,EAC5B,kBAA6B,EAAE,IAAI;AACnC,wBAAmC,EAAE,IAAI;AACzC,kBAA6B,EAAE,IAAI;AACnC,gBAA2B,EAAE,IAAI;AACjC,mBAA8B,EAAE,IAAI;AACpC,uBAAkC,EAAE,IAAI;AACxC,mBAA8B,YAAY;IAE1C,MAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC;QACrC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC;KACjC,CAAC,CAAC;IACH,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3C,UAAU,CAAC,MAAM,CACf;QACE,WAAW,EAAE,kBAAkB,CAAC,wBAAwB;QACxD,eAAe,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC;KACzC,EACD,IAAI,CACL,CAAC;IAEF,MAAM,IAAI,GAAG;QACX,SAAS,CAAC,kBAAkB,EAAE,UAAU,CAAC,KAAK,CAAC;QAC/C,SAAS,CAAC,wBAAwB,EAAE,UAAU,CAAC,KAAK,CAAC;QACrD,SAAS,CAAC,kBAAkB,EAAE,UAAU,CAAC,KAAK,CAAC;QAC/C,SAAS,CAAC,gBAAgB,EAAE,UAAU,CAAC,KAAK,CAAC;QAC7C,SAAS,CAAC,mBAAmB,EAAE,UAAU,CAAC,IAAI,CAAC;QAC/C,SAAS,CAAC,uBAAuB,EAAE,UAAU,CAAC,MAAM,CAAC;QACrD,SAAS,CAAC,mBAAmB,EAAE,UAAU,CAAC,IAAI,CAAC;QAC/C,SAAS,CAAC,gBAAgB,EAAE,UAAU,CAAC,IAAI,CAAC;KAC7C,CAAC;IAEF,OAAO,IAAI,sBAAsB,CAAC;QAChC,IAAI;QACJ,SAAS,EAAE,gBAAgB;QAC3B,IAAI;KACL,CAAC,CAAC;AACL,CAAC","sourcesContent":["import {\n  PublicKey,\n  SYSVAR_CLOCK_PUBKEY,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport * as Layout from \"../../serialization/layout\";\nimport { LendingInstruction } from \"./instruction\";\nimport { AccessType, getAccess } from \"../../utils/Instructions\";\nimport BN from \"bn.js\";\nimport { PORT_LENDING } from \"../../constants\";\n\n// Repay borrowed liquidity to a reserve. Requires a refreshed obligation and reserve.\n//\n// Accounts expected by this instruction:\n//\n//   0. `[writable]` Source liquidity token account.\n//                     Minted by repay reserve liquidity mint.\n//                     $authority can transfer $liquidity_amount.\n//   1. `[writable]` Destination repay reserve liquidity supply SPL Token account.\n//   2. `[writable]` Repay reserve account - refreshed.\n//   3. `[writable]` Obligation account - refreshed.\n//   4. `[]` Lending market account.\n//   5. `[signer]` User transfer authority ($authority).\n//   6. `[]` Clock sysvar.\n//   7. `[]` Token program id.\nexport function repayObligationLiquidityInstruction(\n  liquidityAmount: number | BN,\n  srcLiquidityPubkey: PublicKey, // 0\n  dstLiquiditySupplyPubkey: PublicKey, // 1\n  repayReservePubkey: PublicKey, // 2\n  obligationPubkey: PublicKey, // 3\n  lendingMarketPubkey: PublicKey, // 4\n  transferAuthorityPubkey: PublicKey, // 5\n  lendingProgramId: PublicKey = PORT_LENDING\n): TransactionInstruction {\n  const dataLayout = BufferLayout.struct([\n    BufferLayout.u8(\"instruction\"),\n    Layout.uint64(\"liquidityAmount\"),\n  ]);\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: LendingInstruction.RepayObligationLiquidity,\n      liquidityAmount: new BN(liquidityAmount),\n    },\n    data\n  );\n\n  const keys = [\n    getAccess(srcLiquidityPubkey, AccessType.WRITE),\n    getAccess(dstLiquiditySupplyPubkey, AccessType.WRITE),\n    getAccess(repayReservePubkey, AccessType.WRITE),\n    getAccess(obligationPubkey, AccessType.WRITE),\n    getAccess(lendingMarketPubkey, AccessType.READ),\n    getAccess(transferAuthorityPubkey, AccessType.SIGNER),\n    getAccess(SYSVAR_CLOCK_PUBKEY, AccessType.READ),\n    getAccess(TOKEN_PROGRAM_ID, AccessType.READ),\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId: lendingProgramId,\n    data,\n  });\n}\n"]}
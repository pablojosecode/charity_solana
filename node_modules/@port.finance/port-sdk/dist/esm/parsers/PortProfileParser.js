import { ObligationCollateralLayout, ObligationLayout, ObligationLiquidityLayout, } from "../structs";
import * as BufferLayout from "@solana/buffer-layout";
export const PortProfileParser = (buffer) => {
    const { version, lastUpdate, lendingMarket, owner, depositedValue, borrowedValue, allowedBorrowValue, unhealthyBorrowValue, depositsLen, borrowsLen, dataFlat, } = ObligationLayout.decode(buffer);
    const depositsBuffer = dataFlat.slice(0, depositsLen * ObligationCollateralLayout.span);
    const deposits = BufferLayout.seq(ObligationCollateralLayout, depositsLen).decode(depositsBuffer);
    const borrowsBuffer = dataFlat.slice(depositsBuffer.length, depositsBuffer.length + borrowsLen * ObligationLiquidityLayout.span);
    const borrows = BufferLayout.seq(ObligationLiquidityLayout, borrowsLen).decode(borrowsBuffer);
    return {
        version,
        lastUpdate,
        lendingMarket,
        owner,
        depositedValue,
        borrowedValue,
        allowedBorrowValue,
        unhealthyBorrowValue,
        deposits,
        borrows,
    };
};
//# sourceMappingURL=PortProfileParser.js.map
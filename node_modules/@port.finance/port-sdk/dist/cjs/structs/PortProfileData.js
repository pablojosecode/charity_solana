"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PORT_PROFILE_DATA_SIZE = exports.ObligationLiquidityLayout = exports.ObligationCollateralLayout = exports.ObligationLayout = void 0;
const Margin_1 = require("../models/Margin");
const QuoteValue_1 = require("../models/QuoteValue");
const WalletId_1 = require("../models/WalletId");
const SlotInfo_1 = require("./SlotInfo");
const BufferLayout = __importStar(require("@solana/buffer-layout"));
const Layout = __importStar(require("../serialization/layout"));
const ReserveId_1 = require("../models/ReserveId");
const basic_1 = require("../models/basic");
const BigType_1 = require("../serialization/BigType");
const ExchangeRate_1 = require("../models/ExchangeRate");
exports.ObligationLayout = BufferLayout.struct([
    BufferLayout.u8("version"),
    // eslint-disable-next-line new-cap
    (0, SlotInfo_1.SlotInfoLayout)("lastUpdate"),
    Layout.publicKey("lendingMarket"),
    WalletId_1.WalletId.field("owner"),
    QuoteValue_1.QuoteValue.field("depositedValue"),
    Margin_1.Margin.field("borrowedValue"),
    Margin_1.Margin.field("allowedBorrowValue"),
    Margin_1.Margin.field("unhealthyBorrowValue"),
    BufferLayout.u8("depositsLen"),
    BufferLayout.u8("borrowsLen"),
    BufferLayout.blob(776, "dataFlat"),
]);
exports.ObligationCollateralLayout = BufferLayout.struct([
    ReserveId_1.ReserveId.field("depositReserve"),
    basic_1.Lamport.field(BigType_1.BigType.U64, "depositedAmount"),
    QuoteValue_1.QuoteValue.field("marketValue"),
]);
exports.ObligationLiquidityLayout = BufferLayout.struct([
    ReserveId_1.ReserveId.field("borrowReserve"),
    ExchangeRate_1.ExchangeRate.field(BigType_1.BigType.D128, "cumulativeBorrowRateWads"),
    basic_1.Lamport.field(BigType_1.BigType.D128, "borrowedAmountWads"),
    QuoteValue_1.QuoteValue.field("marketValue"),
]);
exports.PORT_PROFILE_DATA_SIZE = exports.ObligationLayout.span;
//# sourceMappingURL=PortProfileData.js.map
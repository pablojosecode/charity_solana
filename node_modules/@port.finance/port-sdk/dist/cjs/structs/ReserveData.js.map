{"version":3,"file":"ReserveData.js","sourceRoot":"","sources":["../../../src/structs/ReserveData.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable new-cap */\nimport { AccountInfo, PublicKey } from \"@solana/web3.js\";\nimport Big from \"big.js\";\n\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport { Lamport, Percentage } from \"../models/basic\";\nimport { ExchangeRate } from \"../models/ExchangeRate\";\nimport { MintId } from \"../models/MintId\";\nimport { StakingPoolId } from \"../models/staking\";\nimport { TokenAccountId } from \"../models/TokenAccountId\";\nimport { BigField } from \"../serialization/BigField\";\nimport { BigType } from \"../serialization/BigType\";\nimport { Optional } from \"../serialization/Optional\";\nimport * as Layout from \"../serialization/layout\";\nimport { SlotInfo, SlotInfoLayout } from \"./SlotInfo\";\nimport BN from \"bn.js\";\n\nexport interface ReserveData {\n  version: number;\n  lastUpdate: SlotInfo;\n  lendingMarket: PublicKey;\n  liquidity: ReserveLiquidity;\n  collateral: ReserveCollateral;\n  config: ReserveConfig;\n}\n\nexport interface ReserveLiquidity {\n  mintPubkey: MintId;\n  mintDecimals: number;\n  supplyPubkey: TokenAccountId;\n  feeReceiver: TokenAccountId;\n  oracleOption: number;\n  oraclePubkey: PublicKey;\n  availableAmount: Lamport;\n  borrowedAmountWads: Lamport;\n  cumulativeBorrowRateWads: ExchangeRate;\n  marketPrice: Big;\n}\n\nexport interface ReserveCollateral {\n  mintPubkey: MintId;\n  mintTotalSupply: Lamport;\n  supplyPubkey: TokenAccountId;\n}\n\n// only use in create-reserve instruction.\nexport interface ReserveConfigProto {\n  optimalUtilizationRate: number;\n  loanToValueRatio: number;\n  liquidationBonus: number;\n  liquidationThreshold: number;\n  minBorrowRate: number;\n  optimalBorrowRate: number;\n  maxBorrowRate: number;\n  fees: {\n    borrowFeeWad: BN;\n    flashLoanFeeWad: BN;\n    hostFeePercentage: number;\n  };\n  stakingPoolOption: number;\n  stakingPool: PublicKey;\n}\n\n// only use in create-reserve instruction.\nexport const ReserveConfigProtoLayout = (\n  property: string\n): BufferLayout.Structure =>\n  BufferLayout.struct(\n    [\n      BufferLayout.u8(\"optimalUtilizationRate\"),\n      BufferLayout.u8(\"loanToValueRatio\"),\n      BufferLayout.u8(\"liquidationBonus\"),\n      BufferLayout.u8(\"liquidationThreshold\"),\n      BufferLayout.u8(\"minBorrowRate\"),\n      BufferLayout.u8(\"optimalBorrowRate\"),\n      BufferLayout.u8(\"maxBorrowRate\"),\n      ReserveFeesProtoLayout(\"fees\"),\n      BufferLayout.u8(\"stakingPoolOption\"),\n      Layout.publicKey(\"stakingPool\"),\n    ],\n    property\n  );\n\n// only use in create-reserve instruction.\nconst ReserveFeesProtoLayout = (property: string): BufferLayout.Structure =>\n  BufferLayout.struct(\n    [\n      Layout.uint64(\"borrowFeeWad\"),\n      Layout.uint64(\"flashLoanFeeWad\"),\n      BufferLayout.u8(\"hostFeePercentage\"),\n    ],\n    property\n  );\n\nexport interface ReserveConfig {\n  optimalUtilizationRate: Percentage;\n  loanToValueRatio: Percentage;\n  liquidationBonus: Percentage;\n  liquidationThreshold: Percentage;\n  minBorrowRate: Percentage;\n  optimalBorrowRate: Percentage;\n  maxBorrowRate: Percentage;\n  fees: {\n    borrowFeeWad: Big;\n    flashLoanFeeWad: Big;\n    hostFeePercentage: number;\n  };\n  stakingPoolId: StakingPoolId | undefined;\n}\n\nexport const ReserveLiquidityLayout = (\n  property: string\n): BufferLayout.Structure =>\n  BufferLayout.struct(\n    [\n      MintId.field(\"mintPubkey\"),\n      BufferLayout.u8(\"mintDecimals\"),\n      TokenAccountId.field(\"supplyPubkey\"),\n      TokenAccountId.field(\"feeReceiver\"),\n      BufferLayout.u32(\"oracleOption\"),\n      Layout.publicKey(\"oraclePubkey\"),\n      Lamport.field(BigType.U64, \"availableAmount\"),\n      Lamport.field(BigType.D128, \"borrowedAmountWads\"),\n      ExchangeRate.field(BigType.D128, \"cumulativeBorrowRateWads\"),\n      BigField.forType(BigType.D128, \"marketPrice\"),\n    ],\n    property\n  );\n\nexport const ReserveCollateralLayout = (\n  property: string\n): BufferLayout.Structure =>\n  BufferLayout.struct(\n    [\n      MintId.field(\"mintPubkey\"),\n      Lamport.field(BigType.U64, \"mintTotalSupply\"),\n      TokenAccountId.field(\"supplyPubkey\"),\n    ],\n    property\n  );\n\nexport const ReserveFeesLayout = (property: string): BufferLayout.Structure =>\n  BufferLayout.struct(\n    [\n      BigField.forType(BigType.D64, \"borrowFeeWad\"),\n      BigField.forType(BigType.D64, \"flashLoanFeeWad\"),\n      BufferLayout.u8(\"hostFeePercentage\"),\n    ],\n    property\n  );\n\nexport const ReserveConfigLayout = (property: string): BufferLayout.Structure =>\n  BufferLayout.struct(\n    [\n      Percentage.field(\"optimalUtilizationRate\"),\n      Percentage.field(\"loanToValueRatio\"),\n      Percentage.field(\"liquidationBonus\"),\n      Percentage.field(\"liquidationThreshold\"),\n      Percentage.field(\"minBorrowRate\"),\n      Percentage.field(\"optimalBorrowRate\"),\n      Percentage.field(\"maxBorrowRate\"),\n      ReserveFeesLayout(\"fees\"),\n      Optional.of(StakingPoolId.field(\"stakingPoolId\")),\n    ],\n    property\n  );\n\nexport const ReserveLayout = BufferLayout.struct([\n  BufferLayout.u8(\"version\"),\n  SlotInfoLayout(\"lastUpdate\"),\n  Layout.publicKey(\"lendingMarket\"),\n  ReserveLiquidityLayout(\"liquidity\"),\n  ReserveCollateralLayout(\"collateral\"),\n  ReserveConfigLayout(\"config\"),\n  BufferLayout.blob(215, \"padding2\"),\n]);\n\nexport const isReserve = (info: AccountInfo<Buffer>): boolean => {\n  return info.data.length === ReserveLayout.span;\n};\n\nexport const RESERVE_DATA_SIZE = ReserveLayout.span;\n"]}
{"version":3,"file":"depositReserveLiquidity.js","sourceRoot":"","sources":["../../../../src/instructions/lending/depositReserveLiquidity.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAIyB;AAEzB,oEAAsD;AACtD,mEAAqD;AACrD,+CAAmD;AACnD,iDAAqD;AACrD,2DAAiE;AACjE,kDAAuB;AACvB,+CAA+C;AAE/C,6FAA6F;AAC7F,iCAAiC;AACjC,EAAE;AACF,yCAAyC;AACzC,EAAE;AACF,oDAAoD;AACpD,iEAAiE;AACjE,0DAA0D;AAC1D,qCAAqC;AACrC,gEAAgE;AAChE,uDAAuD;AACvD,oCAAoC;AACpC,8CAA8C;AAC9C,wDAAwD;AACxD,0BAA0B;AAC1B,8BAA8B;AACvB,MAAM,kCAAkC,GAAG,CAChD,eAA4B,EAC5B,kBAA6B,EAAE,IAAI;AACnC,mBAA8B,EAAE,IAAI;AACpC,aAAwB,EAAE,IAAI;AAC9B,4BAAuC,EAAE,IAAI;AAC7C,2BAAsC,EAAE,IAAI;AAC5C,mBAA8B,EAAE,IAAI;AACpC,4BAAuC,EAAE,IAAI;AAC7C,uBAAkC,EAAE,IAAI;AACxC,mBAA8B,wBAAY,EAClB,EAAE;IAC1B,MAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC;QACrC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC;KACjC,CAAC,CAAC;IACH,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3C,UAAU,CAAC,MAAM,CACf;QACE,WAAW,EAAE,gCAAkB,CAAC,uBAAuB;QACvD,eAAe,EAAE,IAAI,eAAE,CAAC,eAAe,CAAC;KACzC,EACD,IAAI,CACL,CAAC;IAEF,MAAM,IAAI,GAAG;QACX,IAAA,wBAAS,EAAC,kBAAkB,EAAE,yBAAU,CAAC,KAAK,CAAC;QAC/C,IAAA,wBAAS,EAAC,mBAAmB,EAAE,yBAAU,CAAC,KAAK,CAAC;QAChD,IAAA,wBAAS,EAAC,aAAa,EAAE,yBAAU,CAAC,KAAK,CAAC;QAC1C,IAAA,wBAAS,EAAC,4BAA4B,EAAE,yBAAU,CAAC,KAAK,CAAC;QACzD,IAAA,wBAAS,EAAC,2BAA2B,EAAE,yBAAU,CAAC,KAAK,CAAC;QACxD,IAAA,wBAAS,EAAC,mBAAmB,EAAE,yBAAU,CAAC,IAAI,CAAC;QAC/C,IAAA,wBAAS,EAAC,4BAA4B,EAAE,yBAAU,CAAC,IAAI,CAAC;QACxD,IAAA,wBAAS,EAAC,uBAAuB,EAAE,yBAAU,CAAC,MAAM,CAAC;QACrD,IAAA,wBAAS,EAAC,6BAAmB,EAAE,yBAAU,CAAC,IAAI,CAAC;QAC/C,IAAA,wBAAS,EAAC,4BAAgB,EAAE,yBAAU,CAAC,IAAI,CAAC;KAC7C,CAAC;IAEF,OAAO,IAAI,gCAAsB,CAAC;QAChC,IAAI;QACJ,SAAS,EAAE,gBAAgB;QAC3B,IAAI;KACL,CAAC,CAAC;AACL,CAAC,CAAC;AA3CW,QAAA,kCAAkC,sCA2C7C","sourcesContent":["import {\n  PublicKey,\n  SYSVAR_CLOCK_PUBKEY,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\n\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport * as Layout from \"../../serialization/layout\";\nimport { LendingInstruction } from \"./instruction\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { AccessType, getAccess } from \"../../utils/Instructions\";\nimport BN from \"bn.js\";\nimport { PORT_LENDING } from \"../../constants\";\n\n// Deposit liquidity into a reserve in exchange for collateral. Collateral represents a share\n// of the reserve liquidity pool.\n//\n// Accounts expected by this instruction:\n//\n//   0. `[writable]` Source liquidity token account.\n//                     $authority can transfer $liquidity_amount.\n//   1. `[writable]` Destination collateral token account.\n//   2. `[writable]` Reserve account.\n//   3. `[writable]` Reserve liquidity supply SPL Token account.\n//   4. `[writable]` Reserve collateral SPL Token mint.\n//   5. `[]` Lending market account.\n//   6. `[]` Derived lending market authority.\n//   7. `[signer]` User transfer authority ($authority).\n//   8. `[]` Clock sysvar.\n//   9. `[]` Token program id.\nexport const depositReserveLiquidityInstruction = (\n  liquidityAmount: number | BN,\n  srcLiquidityPubkey: PublicKey, // 0\n  dstCollateralPubkey: PublicKey, // 1\n  reservePubkey: PublicKey, // 2\n  reserveLiquiditySupplyPubkey: PublicKey, // 3\n  reserveCollateralMintPubkey: PublicKey, // 4\n  lendingMarketPubkey: PublicKey, // 5\n  lendingMarketAuthorityPubkey: PublicKey, // 6\n  transferAuthorityPubkey: PublicKey, // 7\n  lendingProgramId: PublicKey = PORT_LENDING\n): TransactionInstruction => {\n  const dataLayout = BufferLayout.struct([\n    BufferLayout.u8(\"instruction\"),\n    Layout.uint64(\"liquidityAmount\"),\n  ]);\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: LendingInstruction.DepositReserveLiquidity,\n      liquidityAmount: new BN(liquidityAmount),\n    },\n    data\n  );\n\n  const keys = [\n    getAccess(srcLiquidityPubkey, AccessType.WRITE),\n    getAccess(dstCollateralPubkey, AccessType.WRITE),\n    getAccess(reservePubkey, AccessType.WRITE),\n    getAccess(reserveLiquiditySupplyPubkey, AccessType.WRITE),\n    getAccess(reserveCollateralMintPubkey, AccessType.WRITE),\n    getAccess(lendingMarketPubkey, AccessType.READ),\n    getAccess(lendingMarketAuthorityPubkey, AccessType.READ),\n    getAccess(transferAuthorityPubkey, AccessType.SIGNER),\n    getAccess(SYSVAR_CLOCK_PUBKEY, AccessType.READ),\n    getAccess(TOKEN_PROGRAM_ID, AccessType.READ),\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId: lendingProgramId,\n    data,\n  });\n};\n"]}
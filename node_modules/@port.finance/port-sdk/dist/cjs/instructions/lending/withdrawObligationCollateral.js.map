{"version":3,"file":"withdrawObligationCollateral.js","sourceRoot":"","sources":["../../../../src/instructions/lending/withdrawObligationCollateral.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAIyB;AACzB,iDAAqD;AACrD,oEAAsD;AACtD,mEAAqD;AACrD,+CAAmD;AACnD,2DAAiE;AACjE,kDAAuB;AACvB,+CAA6D;AAE7D,uFAAuF;AACvF,EAAE;AACF,yCAAyC;AACzC,EAAE;AACF,iFAAiF;AACjF,0DAA0D;AAC1D,kEAAkE;AAClE,kDAAkD;AAClD,oDAAoD;AACpD,oCAAoC;AACpC,8CAA8C;AAC9C,oCAAoC;AACpC,0BAA0B;AAC1B,8BAA8B;AAC9B,6CAA6C;AAC7C,4CAA4C;AAC5C,wCAAwC;AAEjC,MAAM,uCAAuC,GAAG,CACrD,gBAA6B,EAC7B,mBAA8B,EAAE,IAAI;AACpC,mBAA8B,EAAE,IAAI;AACpC,qBAAgC,EAAE,IAAI;AACtC,gBAA2B,EAAE,IAAI;AACjC,mBAA8B,EAAE,IAAI;AACpC,4BAAuC,EAAE,IAAI;AAC7C,qBAAgC,EAAE,IAAI;AACtC,mBAA8B,wBAAY,EAC1C,qBAAiC,EAAE,IAAI;AACvC,oBAAgC,CAAC,KAAK;EACd,EAAE;IAC1B,MAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC;QACrC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC;KAClC,CAAC,CAAC;IACH,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3C,UAAU,CAAC,MAAM,CACf;QACE,WAAW,EAAE,gCAAkB,CAAC,4BAA4B;QAC5D,gBAAgB,EAAE,IAAI,eAAE,CAAC,gBAAgB,CAAC;KAC3C,EACD,IAAI,CACL,CAAC;IAEF,MAAM,IAAI,GAAG;QACX,IAAA,wBAAS,EAAC,mBAAmB,EAAE,yBAAU,CAAC,KAAK,CAAC;QAChD,IAAA,wBAAS,EAAC,mBAAmB,EAAE,yBAAU,CAAC,KAAK,CAAC;QAChD,IAAA,wBAAS,EAAC,qBAAqB,EAAE,yBAAU,CAAC,IAAI,CAAC;QACjD,IAAA,wBAAS,EAAC,gBAAgB,EAAE,yBAAU,CAAC,KAAK,CAAC;QAC7C,IAAA,wBAAS,EAAC,mBAAmB,EAAE,yBAAU,CAAC,IAAI,CAAC;QAC/C,IAAA,wBAAS,EAAC,4BAA4B,EAAE,yBAAU,CAAC,IAAI,CAAC;QACxD,IAAA,wBAAS,EAAC,qBAAqB,EAAE,yBAAU,CAAC,MAAM,CAAC;QACnD,IAAA,wBAAS,EAAC,6BAAmB,EAAE,yBAAU,CAAC,IAAI,CAAC;QAC/C,IAAA,wBAAS,EAAC,4BAAgB,EAAE,yBAAU,CAAC,IAAI,CAAC;KAC7C,CAAC;IAEF,IAAI,qBAAqB,IAAI,oBAAoB,EAAE;QACjD,IAAI,CAAC,IAAI,CACP,IAAA,wBAAS,EAAC,qBAAqB,EAAE,yBAAU,CAAC,KAAK,CAAC,EAClD,IAAA,wBAAS,EAAC,oBAAoB,EAAE,yBAAU,CAAC,KAAK,CAAC,EACjD,IAAA,wBAAS,EAAC,wBAAY,EAAE,yBAAU,CAAC,IAAI,CAAC,CACzC,CAAC;KACH;IAED,OAAO,IAAI,gCAAsB,CAAC;QAChC,IAAI;QACJ,SAAS,EAAE,gBAAgB;QAC3B,IAAI;KACL,CAAC,CAAC;AACL,CAAC,CAAC;AAnDW,QAAA,uCAAuC,2CAmDlD","sourcesContent":["import {\n  PublicKey,\n  SYSVAR_CLOCK_PUBKEY,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport * as Layout from \"../../serialization/layout\";\nimport { LendingInstruction } from \"./instruction\";\nimport { AccessType, getAccess } from \"../../utils/Instructions\";\nimport BN from \"bn.js\";\nimport { PORT_LENDING, PORT_STAKING } from \"../../constants\";\n\n// Withdraw collateral from an obligation. Requires a refreshed obligation and reserve.\n//\n// Accounts expected by this instruction:\n//\n//   0. `[writable]` Source withdraw reserve collateral supply SPL Token account.\n//   1. `[writable]` Destination collateral token account.\n//                     Minted by withdraw reserve collateral mint.\n//   2. `[]` Withdraw reserve account - refreshed.\n//   3. `[writable]` Obligation account - refreshed.\n//   4. `[]` Lending market account.\n//   5. `[]` Derived lending market authority.\n//   6. `[signer]` Obligation owner.\n//   7. `[]` Clock sysvar.\n//   8. `[]` Token program id.\n//   9. `[writable, optional]` Stake account.\n//   10 `[writable, optional]` Staking pool.\n//   11 `[optional]` staking program id.\n\nexport const withdrawObligationCollateralInstruction = (\n  collateralAmount: number | BN,\n  srcCollateralPubkey: PublicKey, // 0\n  dstCollateralPubkey: PublicKey, // 1\n  withdrawReservePubkey: PublicKey, // 2\n  obligationPubkey: PublicKey, // 3\n  lendingMarketPubkey: PublicKey, // 4\n  lendingMarketAuthorityPubkey: PublicKey, // 5\n  obligationOwnerPubkey: PublicKey, // 6\n  lendingProgramId: PublicKey = PORT_LENDING,\n  optStakeAccountPubkey?: PublicKey, // 9\n  optStakingPoolPubkey?: PublicKey // 10\n): TransactionInstruction => {\n  const dataLayout = BufferLayout.struct([\n    BufferLayout.u8(\"instruction\"),\n    Layout.uint64(\"collateralAmount\"),\n  ]);\n  const data = Buffer.alloc(dataLayout.span);\n  dataLayout.encode(\n    {\n      instruction: LendingInstruction.WithdrawObligationCollateral,\n      collateralAmount: new BN(collateralAmount),\n    },\n    data\n  );\n\n  const keys = [\n    getAccess(srcCollateralPubkey, AccessType.WRITE),\n    getAccess(dstCollateralPubkey, AccessType.WRITE),\n    getAccess(withdrawReservePubkey, AccessType.READ),\n    getAccess(obligationPubkey, AccessType.WRITE),\n    getAccess(lendingMarketPubkey, AccessType.READ),\n    getAccess(lendingMarketAuthorityPubkey, AccessType.READ),\n    getAccess(obligationOwnerPubkey, AccessType.SIGNER),\n    getAccess(SYSVAR_CLOCK_PUBKEY, AccessType.READ),\n    getAccess(TOKEN_PROGRAM_ID, AccessType.READ),\n  ];\n\n  if (optStakeAccountPubkey && optStakingPoolPubkey) {\n    keys.push(\n      getAccess(optStakeAccountPubkey, AccessType.WRITE),\n      getAccess(optStakingPoolPubkey, AccessType.WRITE),\n      getAccess(PORT_STAKING, AccessType.READ)\n    );\n  }\n\n  return new TransactionInstruction({\n    keys,\n    programId: lendingProgramId,\n    data,\n  });\n};\n"]}
{"version":3,"file":"setLendingMarketOwner.js","sourceRoot":"","sources":["../../../../src/instructions/lending/setLendingMarketOwner.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAoE;AACpE,mCAAgC;AAChC,oEAAsD;AACtD,+CAA+C;AAC/C,2DAAiE;AACjE,mEAAqD;AACrD,+CAAmD;AAEnD,MAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC;IACrC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC;IAC9B,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC;CAC7B,CAAC,CAAC;AAEH,0CAA0C;AAC1C,EAAE;AACF,yCAAyC;AACzC,EAAE;AACF,4CAA4C;AAC5C,kCAAkC;AAC3B,MAAM,gCAAgC,GAAG,CAC9C,aAAwB,EACxB,kBAA6B,EAC7B,QAAmB,EACnB,mBAA8B,wBAAY,EAClB,EAAE;IAC1B,MAAM,IAAI,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3C,UAAU,CAAC,MAAM,CACf;QACE,WAAW,EAAE,gCAAkB,CAAC,qBAAqB;QACrD,QAAQ;KACT,EACD,IAAI,CACL,CAAC;IAEF,MAAM,IAAI,GAAG;QACX,IAAA,wBAAS,EAAC,aAAa,EAAE,yBAAU,CAAC,KAAK,CAAC;QAC1C,IAAA,wBAAS,EAAC,kBAAkB,EAAE,yBAAU,CAAC,IAAI,CAAC;KAC/C,CAAC;IAEF,OAAO,IAAI,gCAAsB,CAAC;QAChC,IAAI;QACJ,SAAS,EAAE,gBAAgB;QAC3B,IAAI;KACL,CAAC,CAAC;AACL,CAAC,CAAC;AAzBW,QAAA,gCAAgC,oCAyB3C","sourcesContent":["import { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { Buffer } from \"buffer\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport { PORT_LENDING } from \"../../constants\";\nimport { AccessType, getAccess } from \"../../utils/Instructions\";\nimport * as Layout from \"../../serialization/layout\";\nimport { LendingInstruction } from \"./instruction\";\n\nconst DataLayout = BufferLayout.struct([\n  BufferLayout.u8(\"instruction\"),\n  Layout.publicKey(\"newOwner\"),\n]);\n\n// Update the owner of the lending Market.\n//\n// Accounts expected by this instruction:\n//\n//   0. `[writable]` Lending market account.\n//   1. `[signer]` Previous owner.\nexport const setLendingMarketOwnerInstruction = (\n  lendingMarket: PublicKey,\n  lendingMarketOwner: PublicKey,\n  newOwner: PublicKey,\n  lendingProgramId: PublicKey = PORT_LENDING\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: LendingInstruction.SetLendingMarketOwner,\n      newOwner,\n    },\n    data\n  );\n\n  const keys = [\n    getAccess(lendingMarket, AccessType.WRITE),\n    getAccess(lendingMarketOwner, AccessType.READ),\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId: lendingProgramId,\n    data,\n  });\n};\n"]}
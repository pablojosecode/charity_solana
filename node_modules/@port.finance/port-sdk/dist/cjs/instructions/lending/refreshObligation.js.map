{"version":3,"file":"refreshObligation.js","sourceRoot":"","sources":["../../../../src/instructions/lending/refreshObligation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAIyB;AACzB,oEAAsD;AACtD,+CAA+C;AAC/C,2DAAiE;AACjE,+CAAmD;AAEnD,mBAAmB;AACnB,yBAAyB;AACzB,IAAI;AAEJ,MAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAEzE,yFAAyF;AACzF,8FAA8F;AAC9F,sCAAsC;AACtC,EAAE;AACF,yCAAyC;AACzC,EAAE;AACF,wCAAwC;AACxC,0BAA0B;AAC1B,4EAA4E;AAC5E,0EAA0E;AACnE,MAAM,4BAA4B,GAAG,CAC1C,UAAqB,EACrB,eAA4B,EAC5B,cAA2B,EAC3B,mBAA8B,wBAAY,EAClB,EAAE;IAC1B,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3C,UAAU,CAAC,MAAM,CACf,EAAE,WAAW,EAAE,gCAAkB,CAAC,iBAAiB,EAAE,EACrD,IAAI,CACL,CAAC;IAEF,MAAM,IAAI,GAAG;QACX,IAAA,wBAAS,EAAC,UAAU,EAAE,yBAAU,CAAC,KAAK,CAAC;QACvC,IAAA,wBAAS,EAAC,6BAAmB,EAAE,yBAAU,CAAC,IAAI,CAAC;KAChD,CAAC;IAEF,KAAK,MAAM,cAAc,IAAI,eAAe,EAAE;QAC5C,IAAI,CAAC,IAAI,CAAC,IAAA,wBAAS,EAAC,cAAc,EAAE,yBAAU,CAAC,IAAI,CAAC,CAAC,CAAC;KACvD;IAED,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE;QAC1C,IAAI,CAAC,IAAI,CAAC,IAAA,wBAAS,EAAC,aAAa,EAAE,yBAAU,CAAC,IAAI,CAAC,CAAC,CAAC;KACtD;IAED,OAAO,IAAI,gCAAsB,CAAC;QAChC,IAAI;QACJ,SAAS,EAAE,gBAAgB;QAC3B,IAAI;KACL,CAAC,CAAC;AACL,CAAC,CAAC;AA9BW,QAAA,4BAA4B,gCA8BvC","sourcesContent":["import {\n  PublicKey,\n  SYSVAR_CLOCK_PUBKEY,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport * as BufferLayout from \"@solana/buffer-layout\";\nimport { PORT_LENDING } from \"../../constants\";\nimport { AccessType, getAccess } from \"../../utils/Instructions\";\nimport { LendingInstruction } from \"./instruction\";\n\n// interface Data {\n//   instruction: number;\n// }\n\nconst DataLayout = BufferLayout.struct([BufferLayout.u8(\"instruction\")]);\n\n// Refresh an obligation's accrued interest and collateral and liquidity prices. Requires\n// refreshed reserves, as all obligation collateral deposit reserves in order, followed by all\n// liquidity borrow reserves in order.\n//\n// Accounts expected by this instruction:\n//\n//   0. `[writable]` Obligation account.\n//   1. `[]` Clock sysvar.\n//   .. `[]` Collateral deposit reserve accounts - refreshed, all, in order.\n//   .. `[]` Liquidity borrow reserve accounts - refreshed, all, in order.\nexport const refreshObligationInstruction = (\n  obligation: PublicKey,\n  depositReserves: PublicKey[],\n  borrowReserves: PublicKey[],\n  lendingProgramId: PublicKey = PORT_LENDING\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    { instruction: LendingInstruction.RefreshObligation },\n    data\n  );\n\n  const keys = [\n    getAccess(obligation, AccessType.WRITE),\n    getAccess(SYSVAR_CLOCK_PUBKEY, AccessType.READ),\n  ];\n\n  for (const depositReserve of depositReserves) {\n    keys.push(getAccess(depositReserve, AccessType.READ));\n  }\n\n  for (const borrowReserve of borrowReserves) {\n    keys.push(getAccess(borrowReserve, AccessType.READ));\n  }\n\n  return new TransactionInstruction({\n    keys,\n    programId: lendingProgramId,\n    data,\n  });\n};\n"]}
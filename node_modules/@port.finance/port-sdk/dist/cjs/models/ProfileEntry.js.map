{"version":3,"file":"ProfileEntry.js","sourceRoot":"","sources":["../../../src/models/ProfileEntry.ts"],"names":[],"mappings":";;;AACA,mCAAkD;AAElD,MAAsB,YAEpB,SAAQ,sBAAiB;IAGzB,YAAsB,SAAoB,EAAE,MAAe;QACzD,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAES,gBAAgB,CAAC,IAAO;QAChC,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IACzD,CAAC;CACF;AAjBD,oCAiBC","sourcesContent":["import { ReserveId } from \"./ReserveId\";\nimport { Lamport, WrappedLamport } from \"./basic\";\n\nexport abstract class ProfileEntry<\n  T extends ProfileEntry<T>\n> extends WrappedLamport<T> {\n  private readonly reserveId: ReserveId;\n\n  protected constructor(reserveId: ReserveId, amount: Lamport) {\n    super(amount);\n    this.reserveId = reserveId;\n  }\n\n  public getReserveId(): ReserveId {\n    return this.reserveId;\n  }\n\n  protected isCompatibleWith(that: T): boolean {\n    return this.getReserveId().equals(that.getReserveId());\n  }\n}\n"]}
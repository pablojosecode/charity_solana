{"version":3,"file":"Value.js","sourceRoot":"","sources":["../../../src/models/Value.ts"],"names":[],"mappings":";;;AACA,mCAA2C;AAE3C,mCAAgC;AAGhC,MAAsB,KAA0B,SAAQ,eAAU;IAOhE,YAAsB,GAAc;QAClC,KAAK,CAAC,GAAG,CAAC,CAAC;IACb,CAAC;IAEM,OAAO,CAAC,KAAiB,EAAE,OAAwB;QACxD,MAAM,OAAO,GAAG,eAAO,CAAC,EAAE,CACxB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CACrD,CAAC;QACF,OAAO,aAAK,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IACzC,CAAC;IAEM,KAAK;QACV,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjD,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;;AA5BH,sBA6BC;AA5BC,mCAAmC;AACpB,eAAS,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;IACpD,KAAK,EAAE,UAAU;IACjB,QAAQ,EAAE,KAAK;CAChB,CAAC,CAAC","sourcesContent":["import { BigSource } from \"big.js\";\nimport { Decimal, Lamport } from \"./basic\";\nimport { AssetPrice } from \"./AssetPrice\";\nimport { Asset } from \"./Asset\";\nimport { QuantityContext } from \"./QuantityContext\";\n\nexport abstract class Value<V extends Value<V>> extends Decimal<V> {\n  // eslint-disable-next-line new-cap\n  private static FORMATTER = Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  });\n\n  protected constructor(raw: BigSource) {\n    super(raw);\n  }\n\n  public toAsset(price: AssetPrice, context: QuantityContext): Asset {\n    const lamport = Lamport.of(\n      this.raw.div(price.getRaw()).mul(context.multiplier)\n    );\n    return Asset.of(price.getMintId(), lamport);\n  }\n\n  public toNumber(): number {\n    return this.raw.round(2, 0).toNumber();\n  }\n\n  public print(): string {\n    return Value.FORMATTER.format(this.toNumber());\n  }\n\n  public toString(): string {\n    return this.print();\n  }\n}\n"]}
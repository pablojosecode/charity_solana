{"version":3,"file":"ReserveUtilizationRatio.js","sourceRoot":"","sources":["../../../src/models/ReserveUtilizationRatio.ts"],"names":[],"mappings":";;;AACA,mCAA4C;AAE5C,MAAa,uBAAwB,SAAQ,aAA8B;IAGzE,YAAY,MAAc,EAAE,GAAgB;QAC1C,KAAK,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEM,MAAM,CAAC,EAAE,CAAC,MAAc;QAC7B,OAAO,IAAI,uBAAuB,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAES,gBAAgB,CAAC,IAA6B;QACtD,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;CACF;AAnBD,0DAmBC","sourcesContent":["import { MintId } from \"./MintId\";\nimport { Ratio, Percentage } from \"./basic\";\n\nexport class ReserveUtilizationRatio extends Ratio<ReserveUtilizationRatio> {\n  private readonly mintId: MintId;\n\n  constructor(mintId: MintId, pct?: Percentage) {\n    super(pct);\n    this.mintId = mintId;\n  }\n\n  public static na(mintId: MintId): ReserveUtilizationRatio {\n    return new ReserveUtilizationRatio(mintId);\n  }\n\n  public getMintId(): MintId {\n    return this.mintId;\n  }\n\n  protected isCompatibleWith(that: ReserveUtilizationRatio): boolean {\n    return this.mintId.equals(that.mintId);\n  }\n}\n"]}
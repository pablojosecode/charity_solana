{"version":3,"file":"AssetPriceConfig.js","sourceRoot":"","sources":["../../../src/models/AssetPriceConfig.ts"],"names":[],"mappings":";;;;;;AAAA,oDAAyB;AAEzB,MAAa,gBAAgB;IAI3B,YAAoB,QAAgB,EAAE,SAAc;QAClD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAEM,MAAM,CAAC,YAAY,CAAC,QAAgB;QACzC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3C,OAAO,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;QAC9B,OAAO,IAAI,gBAAgB,CAAC,QAAQ,EAAE,IAAI,gBAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnE,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;CACF;AAtBD,4CAsBC","sourcesContent":["import Big from \"big.js\";\n\nexport class AssetPriceConfig {\n  private readonly decimals: number;\n  private readonly increment: Big;\n\n  private constructor(decimals: number, increment: Big) {\n    this.decimals = decimals;\n    this.increment = increment;\n  }\n\n  public static fromDecimals(decimals: number): AssetPriceConfig {\n    console.assert(Number.isInteger(decimals));\n    console.assert(decimals >= 0);\n    return new AssetPriceConfig(decimals, new Big(10).pow(decimals));\n  }\n\n  public getDecimals(): number {\n    return this.decimals;\n  }\n\n  public getIncrement(): Big {\n    return this.increment;\n  }\n}\n"]}
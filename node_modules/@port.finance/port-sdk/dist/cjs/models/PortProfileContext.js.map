{"version":3,"file":"PortProfileContext.js","sourceRoot":"","sources":["../../../src/models/PortProfileContext.ts"],"names":[],"mappings":";;;AAGA,MAAa,kBAAkB;IAI7B,YACE,eAAwC,EACxC,WAA0B;QAE1B,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAEM,MAAM,CAAC,KAAK,CACjB,QAAuB,EACvB,SAAoC;QAEpC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QACvD,IAAI,QAAQ,GAAG,SAAS;YACtB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC1D,CAAC,CAAC,SAAS,CAAC;QACd,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;YAChC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;SACxB;QACD,OAAO,IAAI,kBAAkB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACpD,CAAC;IAEM,kBAAkB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;CACF;AAjCD,gDAiCC;AAED,SAAS,4BAA4B,CAAC,CAAc,EAAE,CAAc;IAClE,MAAM,MAAM,GAAG,CAAC,CAAC,cAAc,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;IAC/D,MAAM,MAAM,GAAG,CAAC,CAAC,cAAc,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;IAC/D,OAAO,MAAM,GAAG,MAAM,CAAC;AACzB,CAAC","sourcesContent":["import { PortProfile } from \"./PortProfile\";\nimport { PortProfileId } from \"./PortProfileId\";\n\nexport class PortProfileContext {\n  private readonly selectedProfile: PortProfile | undefined;\n  private readonly allProfiles: PortProfile[];\n\n  private constructor(\n    selectedProfile: PortProfile | undefined,\n    allProfiles: PortProfile[]\n  ) {\n    this.selectedProfile = selectedProfile;\n    this.allProfiles = allProfiles;\n  }\n\n  public static index(\n    profiles: PortProfile[],\n    whitelist: PortProfileId | undefined\n  ): PortProfileContext {\n    profiles = profiles.sort(byCollateralAndLoanCountDesc);\n    let selected = whitelist\n      ? profiles.find((p) => p.getProfileId().equals(whitelist))\n      : undefined;\n    if (!selected && profiles.length) {\n      selected = profiles[0];\n    }\n    return new PortProfileContext(selected, profiles);\n  }\n\n  public getSelectedProfile(): PortProfile | undefined {\n    return this.selectedProfile;\n  }\n\n  public getAllProfiles(): PortProfile[] {\n    return this.allProfiles;\n  }\n}\n\nfunction byCollateralAndLoanCountDesc(a: PortProfile, b: PortProfile): number {\n  const aCount = a.getCollaterals().length + a.getLoans().length;\n  const bCount = b.getCollaterals().length + b.getLoans().length;\n  return bCount - aCount;\n}\n"]}
import { BigSource } from "big.js";
import { Decimal } from "./Decimal";
import { Field } from "../../serialization/Field";
export declare class Percentage extends Decimal<Percentage> {
    private static PCT_BIP;
    private static PCT_ZERO;
    private static PCT_HUNDRED;
    private static PCT_THOUSAND;
    private constructor();
    static zero(): Percentage;
    static hundred(): Percentage;
    static fromOneBased(oneBased: BigSource): Percentage;
    static fromHundredBased(hundredBased: BigSource): Percentage;
    static fromRaw(raw: BigSource, isHundredBased: boolean): Percentage;
    static field(property: string): Field<Percentage>;
    isTrivial(): boolean;
    isHundredPct(): boolean;
    toOneBasedNumber(dp: number): number;
    toHundredBasedNumber(dp: number): number;
    print(): string;
    replaceWithValue(value: BigSource): Percentage;
}
//# sourceMappingURL=Percentage.d.ts.map
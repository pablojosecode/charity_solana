{"version":3,"file":"Token.js","sourceRoot":"","sources":["../../../../src/models/basic/Token.ts"],"names":[],"mappings":";;;AAEA,qDAAkD;AAElD,MAAsB,KAA0B,SAAQ,+BAAiB;IAGvE,YAAsB,MAAc,EAAE,OAAgB;QACpD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAES,gBAAgB,CAAC,IAAO;QAChC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;CACF;AAnBD,sBAmBC","sourcesContent":["import { Lamport } from \"./Lamport\";\nimport { MintId } from \"../MintId\";\nimport { WrappedLamport } from \"./WrappedLamport\";\n\nexport abstract class Token<T extends Token<T>> extends WrappedLamport<T> {\n  private readonly mintId: MintId;\n\n  protected constructor(mintId: MintId, lamport: Lamport) {\n    super(lamport);\n    this.mintId = mintId;\n  }\n\n  public isNative(): boolean {\n    return this.getMintId().isNative();\n  }\n\n  public getMintId(): MintId {\n    return this.mintId;\n  }\n\n  protected isCompatibleWith(that: T): boolean {\n    return this.mintId.equals(that.mintId);\n  }\n}\n"]}
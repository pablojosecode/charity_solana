{"version":3,"file":"Numerical.js","sourceRoot":"","sources":["../../../../src/models/basic/Numerical.ts"],"names":[],"mappings":";;;;;;AAAA,oDAAoD;AACpD,6CAA0C;AAE1C,MAAsB,SAAkC,SAAQ,uBAAa;IAG3E;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAEM,MAAM,CAAC,GAAG,CAAyB,CAAI,EAAE,CAAI;QAClD,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IAEM,GAAG,CAAC,IAAO;QAChB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;YACpC,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;SAC7C;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IAC9C,CAAC;IAEM,GAAG,CAAC,IAAO;QAChB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;YACpC,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;SAC7C;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IAC9C,CAAC;IAEM,GAAG,CAAC,IAAO;QAChB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACjE,CAAC;IAEM,QAAQ,CAAC,IAAO;QACrB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACjE,CAAC;IAEM,QAAQ,CAAC,GAAc;QAC5B,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvD,CAAC;IAEM,MAAM,CAAC,GAAc;QAC1B,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvD,CAAC;IAEM,OAAO,CAAC,IAAO;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IACxC,CAAC;IAEM,MAAM;QACX,OAAO,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAMO,UAAU,CAAC,GAAc;QAC/B,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;;AAvEH,8BAwEC;AAvEyB,kBAAQ,GAAG,IAAI,gBAAG,CAAC,CAAC,CAAC,CAAC","sourcesContent":["import Big, { BigSource, Comparison } from \"big.js\";\nimport { Comparable } from \"./Comparable\";\n\nexport abstract class Numerical<N extends Numerical<N>> extends Comparable<N> {\n  private static readonly BIG_ZERO = new Big(0);\n\n  protected constructor() {\n    super();\n  }\n\n  public static sum<D extends Numerical<D>>(a: D, b: D): D {\n    return a.add(b);\n  }\n\n  public min(that: N): N {\n    this.checkCompatible(that);\n    if (this.getRaw().lte(that.getRaw())) {\n      return this.replaceWithValue(this.getRaw());\n    }\n    return this.replaceWithValue(that.getRaw());\n  }\n\n  public max(that: N): N {\n    this.checkCompatible(that);\n    if (this.getRaw().gte(that.getRaw())) {\n      return this.replaceWithValue(this.getRaw());\n    }\n    return this.replaceWithValue(that.getRaw());\n  }\n\n  public add(that: N): N {\n    this.checkCompatible(that);\n    return this.replaceWithValue(this.getRaw().add(that.getRaw()));\n  }\n\n  public subtract(that: N): N {\n    this.checkCompatible(that);\n    return this.replaceWithValue(this.getRaw().sub(that.getRaw()));\n  }\n\n  public multiply(pct: BigSource): N {\n    return this.replaceWithValue(this.getRaw().mul(pct));\n  }\n\n  public divide(pct: BigSource): N {\n    return this.replaceWithValue(this.getRaw().div(pct));\n  }\n\n  public compare(that: N): Comparison {\n    return this.compareRaw(that.getRaw());\n  }\n\n  public isZero(): boolean {\n    return this.getSignum() === 0;\n  }\n\n  public isPositive(): boolean {\n    return this.getSignum() > 0;\n  }\n\n  public isNegative(): boolean {\n    return this.getSignum() < 0;\n  }\n\n  public getSignum(): number {\n    return this.compareRaw(Numerical.BIG_ZERO);\n  }\n\n  public abstract getRaw(): Big;\n\n  public abstract replaceWithValue(value: BigSource): N;\n\n  private compareRaw(raw: BigSource): Comparison {\n    return this.getRaw().cmp(raw);\n  }\n}\n"]}
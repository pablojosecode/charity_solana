{"version":3,"file":"ExchangeRate.js","sourceRoot":"","sources":["../../../src/models/ExchangeRate.ts"],"names":[],"mappings":";;;AACA,mCAAgD;AAIhD,MAAa,YAAa,SAAQ,eAAqB;IAGrD,YAAoB,KAAgB;QAClC,KAAK,CAAC,KAAK,CAAC,CAAC;IACf,CAAC;IAEM,MAAM,CAAC,IAAI;QAChB,OAAO,YAAY,CAAC,IAAI,CAAC;IAC3B,CAAC;IAEM,MAAM,CAAC,EAAE,CAAC,GAAc;QAC7B,OAAO,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,IAAa,EAAE,QAAgB;QACjD,OAAO,IAAI,iBAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAEM,gBAAgB,CAAC,KAAgB;QACtC,OAAO,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;;AArBH,oCAsBC;AArBgB,iBAAI,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAuB3C,MAAM,iBAAkB,SAAQ,oBAA0B;IACxD,YAAmB,IAAa,EAAE,QAAgB;QAChD,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACxB,CAAC;IAES,OAAO,CAAC,GAAQ;QACxB,OAAO,YAAY,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;CACF","sourcesContent":["import Big, { BigSource } from \"big.js\";\nimport { Decimal, DecimalField } from \"./basic\";\nimport { Field } from \"../serialization/Field\";\nimport { BigType } from \"../serialization/BigType\";\n\nexport class ExchangeRate extends Decimal<ExchangeRate> {\n  private static ZERO = ExchangeRate.of(0);\n\n  private constructor(value: BigSource) {\n    super(value);\n  }\n\n  public static zero(): ExchangeRate {\n    return ExchangeRate.ZERO;\n  }\n\n  public static of(raw: BigSource): ExchangeRate {\n    return new ExchangeRate(raw);\n  }\n\n  public static field(type: BigType, property: string): Field<ExchangeRate> {\n    return new ExchangeRateField(type, property);\n  }\n\n  public replaceWithValue(value: BigSource): ExchangeRate {\n    return ExchangeRate.of(value);\n  }\n}\n\nclass ExchangeRateField extends DecimalField<ExchangeRate> {\n  public constructor(type: BigType, property: string) {\n    super(type, property);\n  }\n\n  protected fromBig(big: Big): ExchangeRate {\n    return ExchangeRate.of(big);\n  }\n}\n"]}